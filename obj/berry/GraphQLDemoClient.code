[{"Name":"GraphQLDemoClient","SourceText":"// <auto-generated/>\r\n#nullable enable\r\n\r\nnamespace GraphQLDemo.Client\r\n{\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourseResult : global::System.IEquatable<CreateCourseResult>, ICreateCourseResult\r\n    {\r\n        public CreateCourseResult(global::GraphQLDemo.Client.ICreateCourse_CreateCourse? createCourse)\r\n        {\r\n            CreateCourse = createCourse;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.ICreateCourse_CreateCourse? CreateCourse { get; }\r\n\r\n        public virtual global::System.Boolean Equals(CreateCourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((CreateCourse is null && other.CreateCourse is null) || CreateCourse != null && CreateCourse.Equals(other.CreateCourse)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CreateCourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (CreateCourse != null)\r\n                {\r\n                    hash ^= 397 * CreateCourse.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourse_CreateCourse_CourseResult : global::System.IEquatable<CreateCourse_CreateCourse_CourseResult>, ICreateCourse_CreateCourse_CourseResult\r\n    {\r\n        public CreateCourse_CreateCourse_CourseResult(global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.Subject subject)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n\r\n        public virtual global::System.Boolean Equals(CreateCourse_CreateCourse_CourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Subject.Equals(other.Subject);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CreateCourse_CreateCourse_CourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICreateCourseResult\r\n    {\r\n        public global::GraphQLDemo.Client.ICreateCourse_CreateCourse? CreateCourse { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICreateCourse_CreateCourse\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICreateCourse_CreateCourse_CourseResult : ICreateCourse_CreateCourse\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreatedResult : global::System.IEquatable<CourseCreatedResult>, ICourseCreatedResult\r\n    {\r\n        public CourseCreatedResult(global::GraphQLDemo.Client.ICourseCreated_CourseCreated? courseCreated)\r\n        {\r\n            CourseCreated = courseCreated;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.ICourseCreated_CourseCreated? CourseCreated { get; }\r\n\r\n        public virtual global::System.Boolean Equals(CourseCreatedResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((CourseCreated is null && other.CourseCreated is null) || CourseCreated != null && CourseCreated.Equals(other.CourseCreated)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseCreatedResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (CourseCreated != null)\r\n                {\r\n                    hash ^= 397 * CourseCreated.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreated_CourseCreated_CourseResult : global::System.IEquatable<CourseCreated_CourseCreated_CourseResult>, ICourseCreated_CourseCreated_CourseResult\r\n    {\r\n        public CourseCreated_CourseCreated_CourseResult(global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.Subject subject)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n\r\n        public virtual global::System.Boolean Equals(CourseCreated_CourseCreated_CourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Subject.Equals(other.Subject);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseCreated_CourseCreated_CourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseCreatedResult\r\n    {\r\n        public global::GraphQLDemo.Client.ICourseCreated_CourseCreated? CourseCreated { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseCreated_CourseCreated\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseCreated_CourseCreated_CourseResult : ICourseCreated_CourseCreated\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourseResult : global::System.IEquatable<UpdateCourseResult>, IUpdateCourseResult\r\n    {\r\n        public UpdateCourseResult(global::GraphQLDemo.Client.IUpdateCourse_UpdateCourse? updateCourse)\r\n        {\r\n            UpdateCourse = updateCourse;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.IUpdateCourse_UpdateCourse? UpdateCourse { get; }\r\n\r\n        public virtual global::System.Boolean Equals(UpdateCourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((UpdateCourse is null && other.UpdateCourse is null) || UpdateCourse != null && UpdateCourse.Equals(other.UpdateCourse)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((UpdateCourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (UpdateCourse != null)\r\n                {\r\n                    hash ^= 397 * UpdateCourse.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourse_UpdateCourse_CourseResult : global::System.IEquatable<UpdateCourse_UpdateCourse_CourseResult>, IUpdateCourse_UpdateCourse_CourseResult\r\n    {\r\n        public UpdateCourse_UpdateCourse_CourseResult(global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.Subject subject)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n\r\n        public virtual global::System.Boolean Equals(UpdateCourse_UpdateCourse_CourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Subject.Equals(other.Subject);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((UpdateCourse_UpdateCourse_CourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IUpdateCourseResult\r\n    {\r\n        public global::GraphQLDemo.Client.IUpdateCourse_UpdateCourse? UpdateCourse { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IUpdateCourse_UpdateCourse\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IUpdateCourse_UpdateCourse_CourseResult : IUpdateCourse_UpdateCourse\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseByIdResult : global::System.IEquatable<GetCourseByIdResult>, IGetCourseByIdResult\r\n    {\r\n        public GetCourseByIdResult(global::GraphQLDemo.Client.IGetCourseById_CourseById? courseById)\r\n        {\r\n            CourseById = courseById;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.IGetCourseById_CourseById? CourseById { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourseByIdResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((CourseById is null && other.CourseById is null) || CourseById != null && CourseById.Equals(other.CourseById)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourseByIdResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (CourseById != null)\r\n                {\r\n                    hash ^= 397 * CourseById.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseById_CourseById_CourseType : global::System.IEquatable<GetCourseById_CourseById_CourseType>, IGetCourseById_CourseById_CourseType\r\n    {\r\n        public GetCourseById_CourseById_CourseType(global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.IGetCourseById_CourseById_Instructor instructor, global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourseById_CourseById_Students?>? students)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Instructor = instructor;\r\n            Students = students;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.IGetCourseById_CourseById_Instructor Instructor { get; }\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourseById_CourseById_Students?>? Students { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourseById_CourseById_CourseType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Instructor.Equals(other.Instructor) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Students, other.Students);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourseById_CourseById_CourseType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Instructor.GetHashCode();\r\n                if (Students != null)\r\n                {\r\n                    foreach (var Students_elm in Students)\r\n                    {\r\n                        if (Students_elm != null)\r\n                        {\r\n                            hash ^= 397 * Students_elm.GetHashCode();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseById_CourseById_Instructor_InstructorType : global::System.IEquatable<GetCourseById_CourseById_Instructor_InstructorType>, IGetCourseById_CourseById_Instructor_InstructorType\r\n    {\r\n        public GetCourseById_CourseById_Instructor_InstructorType(global::System.String? firstName)\r\n        {\r\n            FirstName = firstName;\r\n        }\r\n\r\n        public global::System.String? FirstName { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourseById_CourseById_Instructor_InstructorType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourseById_CourseById_Instructor_InstructorType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (FirstName != null)\r\n                {\r\n                    hash ^= 397 * FirstName.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseById_CourseById_Students_StudentType : global::System.IEquatable<GetCourseById_CourseById_Students_StudentType>, IGetCourseById_CourseById_Students_StudentType\r\n    {\r\n        public GetCourseById_CourseById_Students_StudentType(global::System.Guid id)\r\n        {\r\n            Id = id;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourseById_CourseById_Students_StudentType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourseById_CourseById_Students_StudentType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseByIdResult\r\n    {\r\n        public global::GraphQLDemo.Client.IGetCourseById_CourseById? CourseById { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseById_CourseById\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.IGetCourseById_CourseById_Instructor Instructor { get; }\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourseById_CourseById_Students?>? Students { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseById_CourseById_CourseType : IGetCourseById_CourseById\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseById_CourseById_Instructor\r\n    {\r\n        public global::System.String? FirstName { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseById_CourseById_Instructor_InstructorType : IGetCourseById_CourseById_Instructor\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseById_CourseById_Students\r\n    {\r\n        public global::System.Guid Id { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseById_CourseById_Students_StudentType : IGetCourseById_CourseById_Students\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class DeleteCourseResult : global::System.IEquatable<DeleteCourseResult>, IDeleteCourseResult\r\n    {\r\n        public DeleteCourseResult(global::System.Boolean deleteCourse)\r\n        {\r\n            DeleteCourse = deleteCourse;\r\n        }\r\n\r\n        public global::System.Boolean DeleteCourse { get; }\r\n\r\n        public virtual global::System.Boolean Equals(DeleteCourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (DeleteCourse == other.DeleteCourse);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((DeleteCourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * DeleteCourse.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IDeleteCourseResult\r\n    {\r\n        public global::System.Boolean DeleteCourse { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdatedResult : global::System.IEquatable<CourseUpdatedResult>, ICourseUpdatedResult\r\n    {\r\n        public CourseUpdatedResult(global::GraphQLDemo.Client.ICourseUpdated_CourseUpdated? courseUpdated)\r\n        {\r\n            CourseUpdated = courseUpdated;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.ICourseUpdated_CourseUpdated? CourseUpdated { get; }\r\n\r\n        public virtual global::System.Boolean Equals(CourseUpdatedResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((CourseUpdated is null && other.CourseUpdated is null) || CourseUpdated != null && CourseUpdated.Equals(other.CourseUpdated)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseUpdatedResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (CourseUpdated != null)\r\n                {\r\n                    hash ^= 397 * CourseUpdated.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdated_CourseUpdated_CourseResult : global::System.IEquatable<CourseUpdated_CourseUpdated_CourseResult>, ICourseUpdated_CourseUpdated_CourseResult\r\n    {\r\n        public CourseUpdated_CourseUpdated_CourseResult(global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.Subject subject)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n\r\n        public virtual global::System.Boolean Equals(CourseUpdated_CourseUpdated_CourseResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Subject.Equals(other.Subject);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseUpdated_CourseUpdated_CourseResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseUpdatedResult\r\n    {\r\n        public global::GraphQLDemo.Client.ICourseUpdated_CourseUpdated? CourseUpdated { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseUpdated_CourseUpdated\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseUpdated_CourseUpdated_CourseResult : ICourseUpdated_CourseUpdated\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SearchResult : global::System.IEquatable<SearchResult>, ISearchResult\r\n    {\r\n        public SearchResult(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.ISearch_Search?>? search)\r\n        {\r\n            Search = search;\r\n        }\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.ISearch_Search?>? Search { get; }\r\n\r\n        public virtual global::System.Boolean Equals(SearchResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Search, other.Search));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((SearchResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Search != null)\r\n                {\r\n                    foreach (var Search_elm in Search)\r\n                    {\r\n                        if (Search_elm != null)\r\n                        {\r\n                            hash ^= 397 * Search_elm.GetHashCode();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class Search_Search_CourseType : global::System.IEquatable<Search_Search_CourseType>, ISearch_Search_CourseType\r\n    {\r\n        public Search_Search_CourseType(global::System.String __typename, global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.Subject subject)\r\n        {\r\n            this.__typename = __typename;\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n        }\r\n\r\n        /// <summary>\r\n        /// The name of the current Object type at runtime.\r\n        /// </summary>\r\n        public global::System.String __typename { get; }\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n\r\n        public virtual global::System.Boolean Equals(Search_Search_CourseType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (__typename.Equals(other.__typename)) && Id.Equals(other.Id) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Subject.Equals(other.Subject);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((Search_Search_CourseType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * __typename.GetHashCode();\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class Search_Search_InstructorType : global::System.IEquatable<Search_Search_InstructorType>, ISearch_Search_InstructorType\r\n    {\r\n        public Search_Search_InstructorType(global::System.String __typename, global::System.Guid id, global::System.String? firstName, global::System.String? lastName)\r\n        {\r\n            this.__typename = __typename;\r\n            Id = id;\r\n            FirstName = firstName;\r\n            LastName = lastName;\r\n        }\r\n\r\n        /// <summary>\r\n        /// The name of the current Object type at runtime.\r\n        /// </summary>\r\n        public global::System.String __typename { get; }\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? FirstName { get; }\r\n        public global::System.String? LastName { get; }\r\n\r\n        public virtual global::System.Boolean Equals(Search_Search_InstructorType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (__typename.Equals(other.__typename)) && Id.Equals(other.Id) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((Search_Search_InstructorType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * __typename.GetHashCode();\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (FirstName != null)\r\n                {\r\n                    hash ^= 397 * FirstName.GetHashCode();\r\n                }\r\n\r\n                if (LastName != null)\r\n                {\r\n                    hash ^= 397 * LastName.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ISearchResult\r\n    {\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.ISearch_Search?>? Search { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ISearch_Search\r\n    {\r\n        public global::System.String __typename { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ISearch_Search_CourseType : ISearch_Search\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ISearch_Search_InstructorType : ISearch_Search\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? FirstName { get; }\r\n        public global::System.String? LastName { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetInstructionsResult : global::System.IEquatable<GetInstructionsResult>, IGetInstructionsResult\r\n    {\r\n        public GetInstructionsResult(global::System.String? instructions)\r\n        {\r\n            Instructions = instructions;\r\n        }\r\n\r\n        public global::System.String? Instructions { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetInstructionsResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Instructions is null && other.Instructions is null) || Instructions != null && Instructions.Equals(other.Instructions)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetInstructionsResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Instructions != null)\r\n                {\r\n                    hash ^= 397 * Instructions.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetInstructionsResult\r\n    {\r\n        public global::System.String? Instructions { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCoursesResult : global::System.IEquatable<GetCoursesResult>, IGetCoursesResult\r\n    {\r\n        public GetCoursesResult(global::GraphQLDemo.Client.IGetCourses_Courses? courses)\r\n        {\r\n            Courses = courses;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.IGetCourses_Courses? Courses { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCoursesResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Courses is null && other.Courses is null) || Courses != null && Courses.Equals(other.Courses)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCoursesResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Courses != null)\r\n                {\r\n                    hash ^= 397 * Courses.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// A connection to a list of items.\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourses_Courses_CourseTypeConnection : global::System.IEquatable<GetCourses_Courses_CourseTypeConnection>, IGetCourses_Courses_CourseTypeConnection\r\n    {\r\n        public GetCourses_Courses_CourseTypeConnection(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourses_Courses_Nodes?>? nodes, global::GraphQLDemo.Client.IGetCourses_Courses_PageInfo pageInfo, global::System.Int32 totalCount)\r\n        {\r\n            Nodes = nodes;\r\n            PageInfo = pageInfo;\r\n            TotalCount = totalCount;\r\n        }\r\n\r\n        /// <summary>\r\n        /// A flattened list of the nodes.\r\n        /// </summary>\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourses_Courses_Nodes?>? Nodes { get; }\r\n        /// <summary>\r\n        /// Information to aid in pagination.\r\n        /// </summary>\r\n        public global::GraphQLDemo.Client.IGetCourses_Courses_PageInfo PageInfo { get; }\r\n        public global::System.Int32 TotalCount { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourses_Courses_CourseTypeConnection? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nodes, other.Nodes)) && PageInfo.Equals(other.PageInfo) && TotalCount == other.TotalCount;\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourses_Courses_CourseTypeConnection)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Nodes != null)\r\n                {\r\n                    foreach (var Nodes_elm in Nodes)\r\n                    {\r\n                        if (Nodes_elm != null)\r\n                        {\r\n                            hash ^= 397 * Nodes_elm.GetHashCode();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                hash ^= 397 * PageInfo.GetHashCode();\r\n                hash ^= 397 * TotalCount.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourses_Courses_Nodes_CourseType : global::System.IEquatable<GetCourses_Courses_Nodes_CourseType>, IGetCourses_Courses_Nodes_CourseType\r\n    {\r\n        public GetCourses_Courses_Nodes_CourseType(global::System.Guid id, global::System.String? name, global::GraphQLDemo.Client.Subject subject, global::GraphQLDemo.Client.IGetCourses_Courses_Nodes_Instructor instructor)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n            Instructor = instructor;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n        public global::GraphQLDemo.Client.IGetCourses_Courses_Nodes_Instructor Instructor { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourses_Courses_Nodes_CourseType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Subject.Equals(other.Subject) && Instructor.Equals(other.Instructor);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourses_Courses_Nodes_CourseType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                hash ^= 397 * Instructor.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Information about pagination in a connection.\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourses_Courses_PageInfo_PageInfo : global::System.IEquatable<GetCourses_Courses_PageInfo_PageInfo>, IGetCourses_Courses_PageInfo_PageInfo\r\n    {\r\n        public GetCourses_Courses_PageInfo_PageInfo(global::System.String? startCursor, global::System.String? endCursor, global::System.Boolean hasNextPage, global::System.Boolean hasPreviousPage)\r\n        {\r\n            StartCursor = startCursor;\r\n            EndCursor = endCursor;\r\n            HasNextPage = hasNextPage;\r\n            HasPreviousPage = hasPreviousPage;\r\n        }\r\n\r\n        /// <summary>\r\n        /// When paginating backwards, the cursor to continue.\r\n        /// </summary>\r\n        public global::System.String? StartCursor { get; }\r\n        /// <summary>\r\n        /// When paginating forwards, the cursor to continue.\r\n        /// </summary>\r\n        public global::System.String? EndCursor { get; }\r\n        /// <summary>\r\n        /// Indicates whether more edges exist following the set defined by the clients arguments.\r\n        /// </summary>\r\n        public global::System.Boolean HasNextPage { get; }\r\n        /// <summary>\r\n        /// Indicates whether more edges exist prior the set defined by the clients arguments.\r\n        /// </summary>\r\n        public global::System.Boolean HasPreviousPage { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourses_Courses_PageInfo_PageInfo? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((StartCursor is null && other.StartCursor is null) || StartCursor != null && StartCursor.Equals(other.StartCursor))) && ((EndCursor is null && other.EndCursor is null) || EndCursor != null && EndCursor.Equals(other.EndCursor)) && HasNextPage == other.HasNextPage && HasPreviousPage == other.HasPreviousPage;\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourses_Courses_PageInfo_PageInfo)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (StartCursor != null)\r\n                {\r\n                    hash ^= 397 * StartCursor.GetHashCode();\r\n                }\r\n\r\n                if (EndCursor != null)\r\n                {\r\n                    hash ^= 397 * EndCursor.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * HasNextPage.GetHashCode();\r\n                hash ^= 397 * HasPreviousPage.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourses_Courses_Nodes_Instructor_InstructorType : global::System.IEquatable<GetCourses_Courses_Nodes_Instructor_InstructorType>, IGetCourses_Courses_Nodes_Instructor_InstructorType\r\n    {\r\n        public GetCourses_Courses_Nodes_Instructor_InstructorType(global::System.Guid id, global::System.String? firstName, global::System.String? lastName, global::System.Double salary)\r\n        {\r\n            Id = id;\r\n            FirstName = firstName;\r\n            LastName = lastName;\r\n            Salary = salary;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? FirstName { get; }\r\n        public global::System.String? LastName { get; }\r\n        public global::System.Double Salary { get; }\r\n\r\n        public virtual global::System.Boolean Equals(GetCourses_Courses_Nodes_Instructor_InstructorType? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id.Equals(other.Id)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && Salary == other.Salary;\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((GetCourses_Courses_Nodes_Instructor_InstructorType)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (FirstName != null)\r\n                {\r\n                    hash ^= 397 * FirstName.GetHashCode();\r\n                }\r\n\r\n                if (LastName != null)\r\n                {\r\n                    hash ^= 397 * LastName.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Salary.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCoursesResult\r\n    {\r\n        public global::GraphQLDemo.Client.IGetCourses_Courses? Courses { get; }\r\n    }\r\n\r\n    /// <summary>\r\n    /// A connection to a list of items.\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses\r\n    {\r\n        /// <summary>\r\n        /// A flattened list of the nodes.\r\n        /// </summary>\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourses_Courses_Nodes?>? Nodes { get; }\r\n        /// <summary>\r\n        /// Information to aid in pagination.\r\n        /// </summary>\r\n        public global::GraphQLDemo.Client.IGetCourses_Courses_PageInfo PageInfo { get; }\r\n        public global::System.Int32 TotalCount { get; }\r\n    }\r\n\r\n    /// <summary>\r\n    /// A connection to a list of items.\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_CourseTypeConnection : IGetCourses_Courses\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_Nodes\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n        public global::GraphQLDemo.Client.IGetCourses_Courses_Nodes_Instructor Instructor { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_Nodes_CourseType : IGetCourses_Courses_Nodes\r\n    {\r\n    }\r\n\r\n    /// <summary>\r\n    /// Information about pagination in a connection.\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_PageInfo\r\n    {\r\n        /// <summary>\r\n        /// When paginating backwards, the cursor to continue.\r\n        /// </summary>\r\n        public global::System.String? StartCursor { get; }\r\n        /// <summary>\r\n        /// When paginating forwards, the cursor to continue.\r\n        /// </summary>\r\n        public global::System.String? EndCursor { get; }\r\n        /// <summary>\r\n        /// Indicates whether more edges exist following the set defined by the clients arguments.\r\n        /// </summary>\r\n        public global::System.Boolean HasNextPage { get; }\r\n        /// <summary>\r\n        /// Indicates whether more edges exist prior the set defined by the clients arguments.\r\n        /// </summary>\r\n        public global::System.Boolean HasPreviousPage { get; }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Information about pagination in a connection.\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_PageInfo_PageInfo : IGetCourses_Courses_PageInfo\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_Nodes_Instructor\r\n    {\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? FirstName { get; }\r\n        public global::System.String? LastName { get; }\r\n        public global::System.Double Salary { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourses_Courses_Nodes_Instructor_InstructorType : IGetCourses_Courses_Nodes_Instructor\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter\r\n    {\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _subjectFormatter = default !;\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _uuidFormatter = default !;\r\n        public global::System.String TypeName => \"CourseTypeInput\";\r\n\r\n        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _stringFormatter = serializerResolver.GetInputValueFormatter(\"String\");\r\n            _subjectFormatter = serializerResolver.GetInputValueFormatter(\"Subject\");\r\n            _uuidFormatter = serializerResolver.GetInputValueFormatter(\"Uuid\");\r\n        }\r\n\r\n        public global::System.Object? Format(global::System.Object? runtimeValue)\r\n        {\r\n            if (runtimeValue is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var input = runtimeValue as global::GraphQLDemo.Client.CourseTypeInput;\r\n            var inputInfo = runtimeValue as global::GraphQLDemo.Client.State.ICourseTypeInputInfo;\r\n            if (input is null || inputInfo is null)\r\n            {\r\n                throw new global::System.ArgumentException(nameof(runtimeValue));\r\n            }\r\n\r\n            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();\r\n            if (inputInfo.IsNameSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"name\", FormatName(input.Name)));\r\n            }\r\n\r\n            if (inputInfo.IsSubjectSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"subject\", FormatSubject(input.Subject)));\r\n            }\r\n\r\n            if (inputInfo.IsInstructorIdSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"instructorId\", FormatInstructorId(input.InstructorId)));\r\n            }\r\n\r\n            return fields;\r\n        }\r\n\r\n        private global::System.Object? FormatName(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatSubject(global::GraphQLDemo.Client.Subject input)\r\n        {\r\n            return _subjectFormatter.Format(input);\r\n        }\r\n\r\n        private global::System.Object? FormatInstructorId(global::System.Guid input)\r\n        {\r\n            return _uuidFormatter.Format(input);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeInput : global::GraphQLDemo.Client.State.ICourseTypeInputInfo, global::System.IEquatable<CourseTypeInput>\r\n    {\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseTypeInput)obj);\r\n        }\r\n\r\n        public virtual global::System.Boolean Equals(CourseTypeInput? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name))) && Subject.Equals(other.Subject) && InstructorId.Equals(other.InstructorId);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                hash ^= 397 * Subject.GetHashCode();\r\n                hash ^= 397 * InstructorId.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n\r\n        private global::System.String? _value_name;\r\n        private global::System.Boolean _set_name;\r\n        private global::GraphQLDemo.Client.Subject _value_subject;\r\n        private global::System.Boolean _set_subject;\r\n        private global::System.Guid _value_instructorId;\r\n        private global::System.Boolean _set_instructorId;\r\n        public global::System.String? Name\r\n        {\r\n            get => _value_name;\r\n            set\r\n            {\r\n                _set_name = true;\r\n                _value_name = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeInputInfo.IsNameSet => _set_name;\r\n\r\n        public global::GraphQLDemo.Client.Subject Subject\r\n        {\r\n            get => _value_subject;\r\n            set\r\n            {\r\n                _set_subject = true;\r\n                _value_subject = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeInputInfo.IsSubjectSet => _set_subject;\r\n\r\n        public global::System.Guid InstructorId\r\n        {\r\n            get => _value_instructorId;\r\n            set\r\n            {\r\n                _set_instructorId = true;\r\n                _value_instructorId = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeInputInfo.IsInstructorIdSet => _set_instructorId;\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter\r\n    {\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _courseTypeFilterInputFormatter = default !;\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _comparableGuidOperationFilterInputFormatter = default !;\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _stringOperationFilterInputFormatter = default !;\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _subjectOperationFilterInputFormatter = default !;\r\n        public global::System.String TypeName => \"CourseTypeFilterInput\";\r\n\r\n        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _courseTypeFilterInputFormatter = serializerResolver.GetInputValueFormatter(\"CourseTypeFilterInput\");\r\n            _comparableGuidOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter(\"ComparableGuidOperationFilterInput\");\r\n            _stringOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter(\"StringOperationFilterInput\");\r\n            _subjectOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter(\"SubjectOperationFilterInput\");\r\n        }\r\n\r\n        public global::System.Object? Format(global::System.Object? runtimeValue)\r\n        {\r\n            if (runtimeValue is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var input = runtimeValue as global::GraphQLDemo.Client.CourseTypeFilterInput;\r\n            var inputInfo = runtimeValue as global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo;\r\n            if (input is null || inputInfo is null)\r\n            {\r\n                throw new global::System.ArgumentException(nameof(runtimeValue));\r\n            }\r\n\r\n            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();\r\n            if (inputInfo.IsAndSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"and\", FormatAnd(input.And)));\r\n            }\r\n\r\n            if (inputInfo.IsOrSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"or\", FormatOr(input.Or)));\r\n            }\r\n\r\n            if (inputInfo.IsIdSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"id\", FormatId(input.Id)));\r\n            }\r\n\r\n            if (inputInfo.IsNameSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"name\", FormatName(input.Name)));\r\n            }\r\n\r\n            if (inputInfo.IsSubjectSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"subject\", FormatSubject(input.Subject)));\r\n            }\r\n\r\n            if (inputInfo.IsInstructorIdSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"instructorId\", FormatInstructorId(input.InstructorId)));\r\n            }\r\n\r\n            if (inputInfo.IsCreatorIdSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"creatorId\", FormatCreatorId(input.CreatorId)));\r\n            }\r\n\r\n            return fields;\r\n        }\r\n\r\n        private global::System.Object? FormatAnd(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeFilterInput>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    if (input_elm is null)\r\n                    {\r\n                        throw new global::System.ArgumentNullException(nameof(input_elm));\r\n                    }\r\n\r\n                    input_list.Add(_courseTypeFilterInputFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatOr(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeFilterInput>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    if (input_elm is null)\r\n                    {\r\n                        throw new global::System.ArgumentNullException(nameof(input_elm));\r\n                    }\r\n\r\n                    input_list.Add(_courseTypeFilterInputFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatId(global::GraphQLDemo.Client.ComparableGuidOperationFilterInput? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _comparableGuidOperationFilterInputFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatName(global::GraphQLDemo.Client.StringOperationFilterInput? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringOperationFilterInputFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatSubject(global::GraphQLDemo.Client.SubjectOperationFilterInput? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _subjectOperationFilterInputFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatInstructorId(global::GraphQLDemo.Client.ComparableGuidOperationFilterInput? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _comparableGuidOperationFilterInputFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatCreatorId(global::GraphQLDemo.Client.StringOperationFilterInput? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringOperationFilterInputFormatter.Format(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeFilterInput : global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo, global::System.IEquatable<CourseTypeFilterInput>\r\n    {\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseTypeFilterInput)obj);\r\n        }\r\n\r\n        public virtual global::System.Boolean Equals(CourseTypeFilterInput? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(And, other.And)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Or, other.Or) && ((Id is null && other.Id is null) || Id != null && Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && ((Subject is null && other.Subject is null) || Subject != null && Subject.Equals(other.Subject)) && ((InstructorId is null && other.InstructorId is null) || InstructorId != null && InstructorId.Equals(other.InstructorId)) && ((CreatorId is null && other.CreatorId is null) || CreatorId != null && CreatorId.Equals(other.CreatorId));\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (And != null)\r\n                {\r\n                    foreach (var And_elm in And)\r\n                    {\r\n                        hash ^= 397 * And_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Or != null)\r\n                {\r\n                    foreach (var Or_elm in Or)\r\n                    {\r\n                        hash ^= 397 * Or_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Id != null)\r\n                {\r\n                    hash ^= 397 * Id.GetHashCode();\r\n                }\r\n\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                if (Subject != null)\r\n                {\r\n                    hash ^= 397 * Subject.GetHashCode();\r\n                }\r\n\r\n                if (InstructorId != null)\r\n                {\r\n                    hash ^= 397 * InstructorId.GetHashCode();\r\n                }\r\n\r\n                if (CreatorId != null)\r\n                {\r\n                    hash ^= 397 * CreatorId.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeFilterInput>? _value_and;\r\n        private global::System.Boolean _set_and;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeFilterInput>? _value_or;\r\n        private global::System.Boolean _set_or;\r\n        private global::GraphQLDemo.Client.ComparableGuidOperationFilterInput? _value_id;\r\n        private global::System.Boolean _set_id;\r\n        private global::GraphQLDemo.Client.StringOperationFilterInput? _value_name;\r\n        private global::System.Boolean _set_name;\r\n        private global::GraphQLDemo.Client.SubjectOperationFilterInput? _value_subject;\r\n        private global::System.Boolean _set_subject;\r\n        private global::GraphQLDemo.Client.ComparableGuidOperationFilterInput? _value_instructorId;\r\n        private global::System.Boolean _set_instructorId;\r\n        private global::GraphQLDemo.Client.StringOperationFilterInput? _value_creatorId;\r\n        private global::System.Boolean _set_creatorId;\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeFilterInput>? And\r\n        {\r\n            get => _value_and;\r\n            set\r\n            {\r\n                _set_and = true;\r\n                _value_and = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsAndSet => _set_and;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeFilterInput>? Or\r\n        {\r\n            get => _value_or;\r\n            set\r\n            {\r\n                _set_or = true;\r\n                _value_or = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsOrSet => _set_or;\r\n\r\n        public global::GraphQLDemo.Client.ComparableGuidOperationFilterInput? Id\r\n        {\r\n            get => _value_id;\r\n            set\r\n            {\r\n                _set_id = true;\r\n                _value_id = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsIdSet => _set_id;\r\n\r\n        public global::GraphQLDemo.Client.StringOperationFilterInput? Name\r\n        {\r\n            get => _value_name;\r\n            set\r\n            {\r\n                _set_name = true;\r\n                _value_name = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsNameSet => _set_name;\r\n\r\n        public global::GraphQLDemo.Client.SubjectOperationFilterInput? Subject\r\n        {\r\n            get => _value_subject;\r\n            set\r\n            {\r\n                _set_subject = true;\r\n                _value_subject = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsSubjectSet => _set_subject;\r\n\r\n        public global::GraphQLDemo.Client.ComparableGuidOperationFilterInput? InstructorId\r\n        {\r\n            get => _value_instructorId;\r\n            set\r\n            {\r\n                _set_instructorId = true;\r\n                _value_instructorId = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsInstructorIdSet => _set_instructorId;\r\n\r\n        public global::GraphQLDemo.Client.StringOperationFilterInput? CreatorId\r\n        {\r\n            get => _value_creatorId;\r\n            set\r\n            {\r\n                _set_creatorId = true;\r\n                _value_creatorId = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeFilterInputInfo.IsCreatorIdSet => _set_creatorId;\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class ComparableGuidOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter\r\n    {\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _uuidFormatter = default !;\r\n        public global::System.String TypeName => \"ComparableGuidOperationFilterInput\";\r\n\r\n        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _uuidFormatter = serializerResolver.GetInputValueFormatter(\"Uuid\");\r\n        }\r\n\r\n        public global::System.Object? Format(global::System.Object? runtimeValue)\r\n        {\r\n            if (runtimeValue is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var input = runtimeValue as global::GraphQLDemo.Client.ComparableGuidOperationFilterInput;\r\n            var inputInfo = runtimeValue as global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo;\r\n            if (input is null || inputInfo is null)\r\n            {\r\n                throw new global::System.ArgumentException(nameof(runtimeValue));\r\n            }\r\n\r\n            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();\r\n            if (inputInfo.IsEqSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"eq\", FormatEq(input.Eq)));\r\n            }\r\n\r\n            if (inputInfo.IsNeqSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"neq\", FormatNeq(input.Neq)));\r\n            }\r\n\r\n            if (inputInfo.IsInSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"in\", FormatIn(input.In)));\r\n            }\r\n\r\n            if (inputInfo.IsNinSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nin\", FormatNin(input.Nin)));\r\n            }\r\n\r\n            if (inputInfo.IsGtSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"gt\", FormatGt(input.Gt)));\r\n            }\r\n\r\n            if (inputInfo.IsNgtSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"ngt\", FormatNgt(input.Ngt)));\r\n            }\r\n\r\n            if (inputInfo.IsGteSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"gte\", FormatGte(input.Gte)));\r\n            }\r\n\r\n            if (inputInfo.IsNgteSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"ngte\", FormatNgte(input.Ngte)));\r\n            }\r\n\r\n            if (inputInfo.IsLtSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"lt\", FormatLt(input.Lt)));\r\n            }\r\n\r\n            if (inputInfo.IsNltSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nlt\", FormatNlt(input.Nlt)));\r\n            }\r\n\r\n            if (inputInfo.IsLteSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"lte\", FormatLte(input.Lte)));\r\n            }\r\n\r\n            if (inputInfo.IsNlteSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nlte\", FormatNlte(input.Nlte)));\r\n            }\r\n\r\n            return fields;\r\n        }\r\n\r\n        private global::System.Object? FormatEq(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNeq(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::System.Guid>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    input_list.Add(_uuidFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::System.Guid>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    input_list.Add(_uuidFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatGt(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNgt(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatGte(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNgte(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatLt(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNlt(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatLte(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNlte(global::System.Guid? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _uuidFormatter.Format(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class ComparableGuidOperationFilterInput : global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo, global::System.IEquatable<ComparableGuidOperationFilterInput>\r\n    {\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((ComparableGuidOperationFilterInput)obj);\r\n        }\r\n\r\n        public virtual global::System.Boolean Equals(ComparableGuidOperationFilterInput? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Eq is null && other.Eq is null) || Eq != null && Eq.Equals(other.Eq))) && ((Neq is null && other.Neq is null) || Neq != null && Neq.Equals(other.Neq)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin) && ((Gt is null && other.Gt is null) || Gt != null && Gt.Equals(other.Gt)) && ((Ngt is null && other.Ngt is null) || Ngt != null && Ngt.Equals(other.Ngt)) && ((Gte is null && other.Gte is null) || Gte != null && Gte.Equals(other.Gte)) && ((Ngte is null && other.Ngte is null) || Ngte != null && Ngte.Equals(other.Ngte)) && ((Lt is null && other.Lt is null) || Lt != null && Lt.Equals(other.Lt)) && ((Nlt is null && other.Nlt is null) || Nlt != null && Nlt.Equals(other.Nlt)) && ((Lte is null && other.Lte is null) || Lte != null && Lte.Equals(other.Lte)) && ((Nlte is null && other.Nlte is null) || Nlte != null && Nlte.Equals(other.Nlte));\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Eq != null)\r\n                {\r\n                    hash ^= 397 * Eq.GetHashCode();\r\n                }\r\n\r\n                if (Neq != null)\r\n                {\r\n                    hash ^= 397 * Neq.GetHashCode();\r\n                }\r\n\r\n                if (In != null)\r\n                {\r\n                    foreach (var In_elm in In)\r\n                    {\r\n                        hash ^= 397 * In_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Nin != null)\r\n                {\r\n                    foreach (var Nin_elm in Nin)\r\n                    {\r\n                        hash ^= 397 * Nin_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Gt != null)\r\n                {\r\n                    hash ^= 397 * Gt.GetHashCode();\r\n                }\r\n\r\n                if (Ngt != null)\r\n                {\r\n                    hash ^= 397 * Ngt.GetHashCode();\r\n                }\r\n\r\n                if (Gte != null)\r\n                {\r\n                    hash ^= 397 * Gte.GetHashCode();\r\n                }\r\n\r\n                if (Ngte != null)\r\n                {\r\n                    hash ^= 397 * Ngte.GetHashCode();\r\n                }\r\n\r\n                if (Lt != null)\r\n                {\r\n                    hash ^= 397 * Lt.GetHashCode();\r\n                }\r\n\r\n                if (Nlt != null)\r\n                {\r\n                    hash ^= 397 * Nlt.GetHashCode();\r\n                }\r\n\r\n                if (Lte != null)\r\n                {\r\n                    hash ^= 397 * Lte.GetHashCode();\r\n                }\r\n\r\n                if (Nlte != null)\r\n                {\r\n                    hash ^= 397 * Nlte.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n\r\n        private global::System.Guid? _value_eq;\r\n        private global::System.Boolean _set_eq;\r\n        private global::System.Guid? _value_neq;\r\n        private global::System.Boolean _set_neq;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::System.Guid>? _value_in;\r\n        private global::System.Boolean _set_in;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::System.Guid>? _value_nin;\r\n        private global::System.Boolean _set_nin;\r\n        private global::System.Guid? _value_gt;\r\n        private global::System.Boolean _set_gt;\r\n        private global::System.Guid? _value_ngt;\r\n        private global::System.Boolean _set_ngt;\r\n        private global::System.Guid? _value_gte;\r\n        private global::System.Boolean _set_gte;\r\n        private global::System.Guid? _value_ngte;\r\n        private global::System.Boolean _set_ngte;\r\n        private global::System.Guid? _value_lt;\r\n        private global::System.Boolean _set_lt;\r\n        private global::System.Guid? _value_nlt;\r\n        private global::System.Boolean _set_nlt;\r\n        private global::System.Guid? _value_lte;\r\n        private global::System.Boolean _set_lte;\r\n        private global::System.Guid? _value_nlte;\r\n        private global::System.Boolean _set_nlte;\r\n        public global::System.Guid? Eq\r\n        {\r\n            get => _value_eq;\r\n            set\r\n            {\r\n                _set_eq = true;\r\n                _value_eq = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsEqSet => _set_eq;\r\n\r\n        public global::System.Guid? Neq\r\n        {\r\n            get => _value_neq;\r\n            set\r\n            {\r\n                _set_neq = true;\r\n                _value_neq = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsNeqSet => _set_neq;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::System.Guid>? In\r\n        {\r\n            get => _value_in;\r\n            set\r\n            {\r\n                _set_in = true;\r\n                _value_in = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsInSet => _set_in;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::System.Guid>? Nin\r\n        {\r\n            get => _value_nin;\r\n            set\r\n            {\r\n                _set_nin = true;\r\n                _value_nin = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsNinSet => _set_nin;\r\n\r\n        public global::System.Guid? Gt\r\n        {\r\n            get => _value_gt;\r\n            set\r\n            {\r\n                _set_gt = true;\r\n                _value_gt = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsGtSet => _set_gt;\r\n\r\n        public global::System.Guid? Ngt\r\n        {\r\n            get => _value_ngt;\r\n            set\r\n            {\r\n                _set_ngt = true;\r\n                _value_ngt = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsNgtSet => _set_ngt;\r\n\r\n        public global::System.Guid? Gte\r\n        {\r\n            get => _value_gte;\r\n            set\r\n            {\r\n                _set_gte = true;\r\n                _value_gte = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsGteSet => _set_gte;\r\n\r\n        public global::System.Guid? Ngte\r\n        {\r\n            get => _value_ngte;\r\n            set\r\n            {\r\n                _set_ngte = true;\r\n                _value_ngte = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsNgteSet => _set_ngte;\r\n\r\n        public global::System.Guid? Lt\r\n        {\r\n            get => _value_lt;\r\n            set\r\n            {\r\n                _set_lt = true;\r\n                _value_lt = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsLtSet => _set_lt;\r\n\r\n        public global::System.Guid? Nlt\r\n        {\r\n            get => _value_nlt;\r\n            set\r\n            {\r\n                _set_nlt = true;\r\n                _value_nlt = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsNltSet => _set_nlt;\r\n\r\n        public global::System.Guid? Lte\r\n        {\r\n            get => _value_lte;\r\n            set\r\n            {\r\n                _set_lte = true;\r\n                _value_lte = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsLteSet => _set_lte;\r\n\r\n        public global::System.Guid? Nlte\r\n        {\r\n            get => _value_nlte;\r\n            set\r\n            {\r\n                _set_nlte = true;\r\n                _value_nlte = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IComparableGuidOperationFilterInputInfo.IsNlteSet => _set_nlte;\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class StringOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter\r\n    {\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _stringOperationFilterInputFormatter = default !;\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;\r\n        public global::System.String TypeName => \"StringOperationFilterInput\";\r\n\r\n        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _stringOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter(\"StringOperationFilterInput\");\r\n            _stringFormatter = serializerResolver.GetInputValueFormatter(\"String\");\r\n        }\r\n\r\n        public global::System.Object? Format(global::System.Object? runtimeValue)\r\n        {\r\n            if (runtimeValue is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var input = runtimeValue as global::GraphQLDemo.Client.StringOperationFilterInput;\r\n            var inputInfo = runtimeValue as global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo;\r\n            if (input is null || inputInfo is null)\r\n            {\r\n                throw new global::System.ArgumentException(nameof(runtimeValue));\r\n            }\r\n\r\n            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();\r\n            if (inputInfo.IsAndSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"and\", FormatAnd(input.And)));\r\n            }\r\n\r\n            if (inputInfo.IsOrSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"or\", FormatOr(input.Or)));\r\n            }\r\n\r\n            if (inputInfo.IsEqSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"eq\", FormatEq(input.Eq)));\r\n            }\r\n\r\n            if (inputInfo.IsNeqSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"neq\", FormatNeq(input.Neq)));\r\n            }\r\n\r\n            if (inputInfo.IsContainsSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"contains\", FormatContains(input.Contains)));\r\n            }\r\n\r\n            if (inputInfo.IsNcontainsSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"ncontains\", FormatNcontains(input.Ncontains)));\r\n            }\r\n\r\n            if (inputInfo.IsInSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"in\", FormatIn(input.In)));\r\n            }\r\n\r\n            if (inputInfo.IsNinSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nin\", FormatNin(input.Nin)));\r\n            }\r\n\r\n            if (inputInfo.IsStartsWithSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"startsWith\", FormatStartsWith(input.StartsWith)));\r\n            }\r\n\r\n            if (inputInfo.IsNstartsWithSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nstartsWith\", FormatNstartsWith(input.NstartsWith)));\r\n            }\r\n\r\n            if (inputInfo.IsEndsWithSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"endsWith\", FormatEndsWith(input.EndsWith)));\r\n            }\r\n\r\n            if (inputInfo.IsNendsWithSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nendsWith\", FormatNendsWith(input.NendsWith)));\r\n            }\r\n\r\n            return fields;\r\n        }\r\n\r\n        private global::System.Object? FormatAnd(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.StringOperationFilterInput>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    if (input_elm is null)\r\n                    {\r\n                        throw new global::System.ArgumentNullException(nameof(input_elm));\r\n                    }\r\n\r\n                    input_list.Add(_stringOperationFilterInputFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatOr(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.StringOperationFilterInput>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    if (input_elm is null)\r\n                    {\r\n                        throw new global::System.ArgumentNullException(nameof(input_elm));\r\n                    }\r\n\r\n                    input_list.Add(_stringOperationFilterInputFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatEq(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNeq(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatContains(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNcontains(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::System.String?>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    if (input_elm is null)\r\n                    {\r\n                        input_list.Add(input_elm);\r\n                    }\r\n                    else\r\n                    {\r\n                        input_list.Add(_stringFormatter.Format(input_elm));\r\n                    }\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::System.String?>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    if (input_elm is null)\r\n                    {\r\n                        input_list.Add(input_elm);\r\n                    }\r\n                    else\r\n                    {\r\n                        input_list.Add(_stringFormatter.Format(input_elm));\r\n                    }\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatStartsWith(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNstartsWith(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatEndsWith(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNendsWith(global::System.String? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class StringOperationFilterInput : global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo, global::System.IEquatable<StringOperationFilterInput>\r\n    {\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((StringOperationFilterInput)obj);\r\n        }\r\n\r\n        public virtual global::System.Boolean Equals(StringOperationFilterInput? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(And, other.And)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Or, other.Or) && ((Eq is null && other.Eq is null) || Eq != null && Eq.Equals(other.Eq)) && ((Neq is null && other.Neq is null) || Neq != null && Neq.Equals(other.Neq)) && ((Contains is null && other.Contains is null) || Contains != null && Contains.Equals(other.Contains)) && ((Ncontains is null && other.Ncontains is null) || Ncontains != null && Ncontains.Equals(other.Ncontains)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin) && ((StartsWith is null && other.StartsWith is null) || StartsWith != null && StartsWith.Equals(other.StartsWith)) && ((NstartsWith is null && other.NstartsWith is null) || NstartsWith != null && NstartsWith.Equals(other.NstartsWith)) && ((EndsWith is null && other.EndsWith is null) || EndsWith != null && EndsWith.Equals(other.EndsWith)) && ((NendsWith is null && other.NendsWith is null) || NendsWith != null && NendsWith.Equals(other.NendsWith));\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (And != null)\r\n                {\r\n                    foreach (var And_elm in And)\r\n                    {\r\n                        hash ^= 397 * And_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Or != null)\r\n                {\r\n                    foreach (var Or_elm in Or)\r\n                    {\r\n                        hash ^= 397 * Or_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Eq != null)\r\n                {\r\n                    hash ^= 397 * Eq.GetHashCode();\r\n                }\r\n\r\n                if (Neq != null)\r\n                {\r\n                    hash ^= 397 * Neq.GetHashCode();\r\n                }\r\n\r\n                if (Contains != null)\r\n                {\r\n                    hash ^= 397 * Contains.GetHashCode();\r\n                }\r\n\r\n                if (Ncontains != null)\r\n                {\r\n                    hash ^= 397 * Ncontains.GetHashCode();\r\n                }\r\n\r\n                if (In != null)\r\n                {\r\n                    foreach (var In_elm in In)\r\n                    {\r\n                        if (In_elm != null)\r\n                        {\r\n                            hash ^= 397 * In_elm.GetHashCode();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (Nin != null)\r\n                {\r\n                    foreach (var Nin_elm in Nin)\r\n                    {\r\n                        if (Nin_elm != null)\r\n                        {\r\n                            hash ^= 397 * Nin_elm.GetHashCode();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (StartsWith != null)\r\n                {\r\n                    hash ^= 397 * StartsWith.GetHashCode();\r\n                }\r\n\r\n                if (NstartsWith != null)\r\n                {\r\n                    hash ^= 397 * NstartsWith.GetHashCode();\r\n                }\r\n\r\n                if (EndsWith != null)\r\n                {\r\n                    hash ^= 397 * EndsWith.GetHashCode();\r\n                }\r\n\r\n                if (NendsWith != null)\r\n                {\r\n                    hash ^= 397 * NendsWith.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.StringOperationFilterInput>? _value_and;\r\n        private global::System.Boolean _set_and;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.StringOperationFilterInput>? _value_or;\r\n        private global::System.Boolean _set_or;\r\n        private global::System.String? _value_eq;\r\n        private global::System.Boolean _set_eq;\r\n        private global::System.String? _value_neq;\r\n        private global::System.Boolean _set_neq;\r\n        private global::System.String? _value_contains;\r\n        private global::System.Boolean _set_contains;\r\n        private global::System.String? _value_ncontains;\r\n        private global::System.Boolean _set_ncontains;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::System.String?>? _value_in;\r\n        private global::System.Boolean _set_in;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::System.String?>? _value_nin;\r\n        private global::System.Boolean _set_nin;\r\n        private global::System.String? _value_startsWith;\r\n        private global::System.Boolean _set_startsWith;\r\n        private global::System.String? _value_nstartsWith;\r\n        private global::System.Boolean _set_nstartsWith;\r\n        private global::System.String? _value_endsWith;\r\n        private global::System.Boolean _set_endsWith;\r\n        private global::System.String? _value_nendsWith;\r\n        private global::System.Boolean _set_nendsWith;\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.StringOperationFilterInput>? And\r\n        {\r\n            get => _value_and;\r\n            set\r\n            {\r\n                _set_and = true;\r\n                _value_and = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsAndSet => _set_and;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.StringOperationFilterInput>? Or\r\n        {\r\n            get => _value_or;\r\n            set\r\n            {\r\n                _set_or = true;\r\n                _value_or = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsOrSet => _set_or;\r\n\r\n        public global::System.String? Eq\r\n        {\r\n            get => _value_eq;\r\n            set\r\n            {\r\n                _set_eq = true;\r\n                _value_eq = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsEqSet => _set_eq;\r\n\r\n        public global::System.String? Neq\r\n        {\r\n            get => _value_neq;\r\n            set\r\n            {\r\n                _set_neq = true;\r\n                _value_neq = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsNeqSet => _set_neq;\r\n\r\n        public global::System.String? Contains\r\n        {\r\n            get => _value_contains;\r\n            set\r\n            {\r\n                _set_contains = true;\r\n                _value_contains = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsContainsSet => _set_contains;\r\n\r\n        public global::System.String? Ncontains\r\n        {\r\n            get => _value_ncontains;\r\n            set\r\n            {\r\n                _set_ncontains = true;\r\n                _value_ncontains = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsNcontainsSet => _set_ncontains;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::System.String?>? In\r\n        {\r\n            get => _value_in;\r\n            set\r\n            {\r\n                _set_in = true;\r\n                _value_in = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsInSet => _set_in;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::System.String?>? Nin\r\n        {\r\n            get => _value_nin;\r\n            set\r\n            {\r\n                _set_nin = true;\r\n                _value_nin = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsNinSet => _set_nin;\r\n\r\n        public global::System.String? StartsWith\r\n        {\r\n            get => _value_startsWith;\r\n            set\r\n            {\r\n                _set_startsWith = true;\r\n                _value_startsWith = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsStartsWithSet => _set_startsWith;\r\n\r\n        public global::System.String? NstartsWith\r\n        {\r\n            get => _value_nstartsWith;\r\n            set\r\n            {\r\n                _set_nstartsWith = true;\r\n                _value_nstartsWith = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsNstartsWithSet => _set_nstartsWith;\r\n\r\n        public global::System.String? EndsWith\r\n        {\r\n            get => _value_endsWith;\r\n            set\r\n            {\r\n                _set_endsWith = true;\r\n                _value_endsWith = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsEndsWithSet => _set_endsWith;\r\n\r\n        public global::System.String? NendsWith\r\n        {\r\n            get => _value_nendsWith;\r\n            set\r\n            {\r\n                _set_nendsWith = true;\r\n                _value_nendsWith = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.IStringOperationFilterInputInfo.IsNendsWithSet => _set_nendsWith;\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SubjectOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter\r\n    {\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _subjectFormatter = default !;\r\n        public global::System.String TypeName => \"SubjectOperationFilterInput\";\r\n\r\n        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _subjectFormatter = serializerResolver.GetInputValueFormatter(\"Subject\");\r\n        }\r\n\r\n        public global::System.Object? Format(global::System.Object? runtimeValue)\r\n        {\r\n            if (runtimeValue is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var input = runtimeValue as global::GraphQLDemo.Client.SubjectOperationFilterInput;\r\n            var inputInfo = runtimeValue as global::GraphQLDemo.Client.State.ISubjectOperationFilterInputInfo;\r\n            if (input is null || inputInfo is null)\r\n            {\r\n                throw new global::System.ArgumentException(nameof(runtimeValue));\r\n            }\r\n\r\n            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();\r\n            if (inputInfo.IsEqSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"eq\", FormatEq(input.Eq)));\r\n            }\r\n\r\n            if (inputInfo.IsNeqSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"neq\", FormatNeq(input.Neq)));\r\n            }\r\n\r\n            if (inputInfo.IsInSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"in\", FormatIn(input.In)));\r\n            }\r\n\r\n            if (inputInfo.IsNinSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"nin\", FormatNin(input.Nin)));\r\n            }\r\n\r\n            return fields;\r\n        }\r\n\r\n        private global::System.Object? FormatEq(global::GraphQLDemo.Client.Subject? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _subjectFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNeq(global::GraphQLDemo.Client.Subject? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _subjectFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.Subject>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    input_list.Add(_subjectFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.Subject>? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var input_elm in input)\r\n                {\r\n                    input_list.Add(_subjectFormatter.Format(input_elm));\r\n                }\r\n\r\n                return input_list;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SubjectOperationFilterInput : global::GraphQLDemo.Client.State.ISubjectOperationFilterInputInfo, global::System.IEquatable<SubjectOperationFilterInput>\r\n    {\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((SubjectOperationFilterInput)obj);\r\n        }\r\n\r\n        public virtual global::System.Boolean Equals(SubjectOperationFilterInput? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Eq is null && other.Eq is null) || Eq != null && Eq.Equals(other.Eq))) && ((Neq is null && other.Neq is null) || Neq != null && Neq.Equals(other.Neq)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Eq != null)\r\n                {\r\n                    hash ^= 397 * Eq.GetHashCode();\r\n                }\r\n\r\n                if (Neq != null)\r\n                {\r\n                    hash ^= 397 * Neq.GetHashCode();\r\n                }\r\n\r\n                if (In != null)\r\n                {\r\n                    foreach (var In_elm in In)\r\n                    {\r\n                        hash ^= 397 * In_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                if (Nin != null)\r\n                {\r\n                    foreach (var Nin_elm in Nin)\r\n                    {\r\n                        hash ^= 397 * Nin_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject? _value_eq;\r\n        private global::System.Boolean _set_eq;\r\n        private global::GraphQLDemo.Client.Subject? _value_neq;\r\n        private global::System.Boolean _set_neq;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.Subject>? _value_in;\r\n        private global::System.Boolean _set_in;\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.Subject>? _value_nin;\r\n        private global::System.Boolean _set_nin;\r\n        public global::GraphQLDemo.Client.Subject? Eq\r\n        {\r\n            get => _value_eq;\r\n            set\r\n            {\r\n                _set_eq = true;\r\n                _value_eq = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ISubjectOperationFilterInputInfo.IsEqSet => _set_eq;\r\n\r\n        public global::GraphQLDemo.Client.Subject? Neq\r\n        {\r\n            get => _value_neq;\r\n            set\r\n            {\r\n                _set_neq = true;\r\n                _value_neq = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ISubjectOperationFilterInputInfo.IsNeqSet => _set_neq;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.Subject>? In\r\n        {\r\n            get => _value_in;\r\n            set\r\n            {\r\n                _set_in = true;\r\n                _value_in = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ISubjectOperationFilterInputInfo.IsInSet => _set_in;\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.Subject>? Nin\r\n        {\r\n            get => _value_nin;\r\n            set\r\n            {\r\n                _set_nin = true;\r\n                _value_nin = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ISubjectOperationFilterInputInfo.IsNinSet => _set_nin;\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeSortInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter\r\n    {\r\n        private global::StrawberryShake.Serialization.IInputValueFormatter _sortEnumTypeFormatter = default !;\r\n        public global::System.String TypeName => \"CourseTypeSortInput\";\r\n\r\n        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _sortEnumTypeFormatter = serializerResolver.GetInputValueFormatter(\"SortEnumType\");\r\n        }\r\n\r\n        public global::System.Object? Format(global::System.Object? runtimeValue)\r\n        {\r\n            if (runtimeValue is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var input = runtimeValue as global::GraphQLDemo.Client.CourseTypeSortInput;\r\n            var inputInfo = runtimeValue as global::GraphQLDemo.Client.State.ICourseTypeSortInputInfo;\r\n            if (input is null || inputInfo is null)\r\n            {\r\n                throw new global::System.ArgumentException(nameof(runtimeValue));\r\n            }\r\n\r\n            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();\r\n            if (inputInfo.IsNameSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"name\", FormatName(input.Name)));\r\n            }\r\n\r\n            if (inputInfo.IsSubjectSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"subject\", FormatSubject(input.Subject)));\r\n            }\r\n\r\n            if (inputInfo.IsCreatorIdSet)\r\n            {\r\n                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(\"creatorId\", FormatCreatorId(input.CreatorId)));\r\n            }\r\n\r\n            return fields;\r\n        }\r\n\r\n        private global::System.Object? FormatName(global::GraphQLDemo.Client.SortEnumType? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _sortEnumTypeFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatSubject(global::GraphQLDemo.Client.SortEnumType? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _sortEnumTypeFormatter.Format(input);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatCreatorId(global::GraphQLDemo.Client.SortEnumType? input)\r\n        {\r\n            if (input is null)\r\n            {\r\n                return input;\r\n            }\r\n            else\r\n            {\r\n                return _sortEnumTypeFormatter.Format(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeSortInput : global::GraphQLDemo.Client.State.ICourseTypeSortInputInfo, global::System.IEquatable<CourseTypeSortInput>\r\n    {\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((CourseTypeSortInput)obj);\r\n        }\r\n\r\n        public virtual global::System.Boolean Equals(CourseTypeSortInput? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name))) && ((Subject is null && other.Subject is null) || Subject != null && Subject.Equals(other.Subject)) && ((CreatorId is null && other.CreatorId is null) || CreatorId != null && CreatorId.Equals(other.CreatorId));\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Name != null)\r\n                {\r\n                    hash ^= 397 * Name.GetHashCode();\r\n                }\r\n\r\n                if (Subject != null)\r\n                {\r\n                    hash ^= 397 * Subject.GetHashCode();\r\n                }\r\n\r\n                if (CreatorId != null)\r\n                {\r\n                    hash ^= 397 * CreatorId.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.SortEnumType? _value_name;\r\n        private global::System.Boolean _set_name;\r\n        private global::GraphQLDemo.Client.SortEnumType? _value_subject;\r\n        private global::System.Boolean _set_subject;\r\n        private global::GraphQLDemo.Client.SortEnumType? _value_creatorId;\r\n        private global::System.Boolean _set_creatorId;\r\n        public global::GraphQLDemo.Client.SortEnumType? Name\r\n        {\r\n            get => _value_name;\r\n            set\r\n            {\r\n                _set_name = true;\r\n                _value_name = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeSortInputInfo.IsNameSet => _set_name;\r\n\r\n        public global::GraphQLDemo.Client.SortEnumType? Subject\r\n        {\r\n            get => _value_subject;\r\n            set\r\n            {\r\n                _set_subject = true;\r\n                _value_subject = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeSortInputInfo.IsSubjectSet => _set_subject;\r\n\r\n        public global::GraphQLDemo.Client.SortEnumType? CreatorId\r\n        {\r\n            get => _value_creatorId;\r\n            set\r\n            {\r\n                _set_creatorId = true;\r\n                _value_creatorId = value;\r\n            }\r\n        }\r\n\r\n        global::System.Boolean global::GraphQLDemo.Client.State.ICourseTypeSortInputInfo.IsCreatorIdSet => _set_creatorId;\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public enum Subject\r\n    {\r\n        Mathematics,\r\n        Science,\r\n        History\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SubjectSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, Subject>\r\n    {\r\n        public global::System.String TypeName => \"Subject\";\r\n\r\n        public Subject Parse(global::System.String serializedValue)\r\n        {\r\n            return serializedValue switch\r\n            {\r\n                \"MATHEMATICS\" => Subject.Mathematics,\r\n                \"SCIENCE\" => Subject.Science,\r\n                \"HISTORY\" => Subject.History,\r\n                _ => throw new global::StrawberryShake.GraphQLClientException()};\r\n        }\r\n\r\n        public global::System.Object Format(global::System.Object? runtimeValue)\r\n        {\r\n            return runtimeValue switch\r\n            {\r\n                Subject.Mathematics => \"MATHEMATICS\",\r\n                Subject.Science => \"SCIENCE\",\r\n                Subject.History => \"HISTORY\",\r\n                _ => throw new global::StrawberryShake.GraphQLClientException()};\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public enum SortEnumType\r\n    {\r\n        Asc,\r\n        Desc\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SortEnumTypeSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, SortEnumType>\r\n    {\r\n        public global::System.String TypeName => \"SortEnumType\";\r\n\r\n        public SortEnumType Parse(global::System.String serializedValue)\r\n        {\r\n            return serializedValue switch\r\n            {\r\n                \"ASC\" => SortEnumType.Asc,\r\n                \"DESC\" => SortEnumType.Desc,\r\n                _ => throw new global::StrawberryShake.GraphQLClientException()};\r\n        }\r\n\r\n        public global::System.Object Format(global::System.Object? runtimeValue)\r\n        {\r\n            return runtimeValue switch\r\n            {\r\n                SortEnumType.Asc => \"ASC\",\r\n                SortEnumType.Desc => \"DESC\",\r\n                _ => throw new global::StrawberryShake.GraphQLClientException()};\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CreateCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation CreateCourse($courseInput: CourseTypeInput) {\r\n    ///   createCourse(courseInput: $courseInput) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourseMutationDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private CreateCourseMutationDocument()\r\n        {\r\n        }\r\n\r\n        public static CreateCourseMutationDocument Instance { get; } = new CreateCourseMutationDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x6d,\r\n            0x75,\r\n            0x74,\r\n            0x61,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x72,\r\n            0x65,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x28,\r\n            0x24,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x63,\r\n            0x72,\r\n            0x65,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x28,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x6a,\r\n            0x65,\r\n            0x63,\r\n            0x74,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x52,\r\n            0x65,\r\n            0x73,\r\n            0x75,\r\n            0x6c,\r\n            0x74,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"7417a5b62a7305cf0d2c91c4db0006bc\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CreateCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation CreateCourse($courseInput: CourseTypeInput) {\r\n    ///   createCourse(courseInput: $courseInput) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourseMutation : global::GraphQLDemo.Client.ICreateCourseMutation\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<ICreateCourseResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _courseTypeInputFormatter;\r\n        public CreateCourseMutation(global::StrawberryShake.IOperationExecutor<ICreateCourseResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _courseTypeInputFormatter = serializerResolver.GetInputValueFormatter(\"CourseTypeInput\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateCourseResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCourseResult>> ExecuteAsync(global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest(courseInput);\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCourseResult>> Watch(global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(courseInput);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::GraphQLDemo.Client.CourseTypeInput? courseInput)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"courseInput\", FormatCourseInput(courseInput));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: CreateCourseMutationDocument.Instance.Hash.Value, name: \"CreateCourse\", document: CreateCourseMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatCourseInput(global::GraphQLDemo.Client.CourseTypeInput? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _courseTypeInputFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CreateCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation CreateCourse($courseInput: CourseTypeInput) {\r\n    ///   createCourse(courseInput: $courseInput) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICreateCourseMutation : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCourseResult>> ExecuteAsync(global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCourseResult>> Watch(global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CourseCreated GraphQL operation\r\n    /// <code>\r\n    /// subscription CourseCreated {\r\n    ///   courseCreated {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreatedSubscriptionDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private CourseCreatedSubscriptionDocument()\r\n        {\r\n        }\r\n\r\n        public static CourseCreatedSubscriptionDocument Instance { get; } = new CourseCreatedSubscriptionDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Subscription;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x73,\r\n            0x63,\r\n            0x72,\r\n            0x69,\r\n            0x70,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x43,\r\n            0x72,\r\n            0x65,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x64,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x43,\r\n            0x72,\r\n            0x65,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x64,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x6a,\r\n            0x65,\r\n            0x63,\r\n            0x74,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x52,\r\n            0x65,\r\n            0x73,\r\n            0x75,\r\n            0x6c,\r\n            0x74,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"84cea8b4beaaab4cacd48a60651a498f\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CourseCreated GraphQL operation\r\n    /// <code>\r\n    /// subscription CourseCreated {\r\n    ///   courseCreated {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreatedSubscription : global::GraphQLDemo.Client.ICourseCreatedSubscription\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<ICourseCreatedResult> _operationExecutor;\r\n        public CourseCreatedSubscription(global::StrawberryShake.IOperationExecutor<ICourseCreatedResult> operationExecutor)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICourseCreatedResult);\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICourseCreatedResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest();\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest()\r\n        {\r\n            return CreateRequest(null);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: CourseCreatedSubscriptionDocument.Instance.Hash.Value, name: \"CourseCreated\", document: CourseCreatedSubscriptionDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest();\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CourseCreated GraphQL operation\r\n    /// <code>\r\n    /// subscription CourseCreated {\r\n    ///   courseCreated {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseCreatedSubscription : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<ICourseCreatedResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the UpdateCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation UpdateCourse($id: Uuid!, $courseInput: CourseTypeInput) {\r\n    ///   updateCourse(courseInput: $courseInput, id: $id) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourseMutationDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private UpdateCourseMutationDocument()\r\n        {\r\n        }\r\n\r\n        public static UpdateCourseMutationDocument Instance { get; } = new UpdateCourseMutationDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x6d,\r\n            0x75,\r\n            0x74,\r\n            0x61,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x55,\r\n            0x70,\r\n            0x64,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x28,\r\n            0x24,\r\n            0x69,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x55,\r\n            0x75,\r\n            0x69,\r\n            0x64,\r\n            0x21,\r\n            0x2c,\r\n            0x20,\r\n            0x24,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x75,\r\n            0x70,\r\n            0x64,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x28,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x2c,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x69,\r\n            0x64,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x6a,\r\n            0x65,\r\n            0x63,\r\n            0x74,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x52,\r\n            0x65,\r\n            0x73,\r\n            0x75,\r\n            0x6c,\r\n            0x74,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"2518ef6509a3fe280b913445fdfda76f\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the UpdateCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation UpdateCourse($id: Uuid!, $courseInput: CourseTypeInput) {\r\n    ///   updateCourse(courseInput: $courseInput, id: $id) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourseMutation : global::GraphQLDemo.Client.IUpdateCourseMutation\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<IUpdateCourseResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _uuidFormatter;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _courseTypeInputFormatter;\r\n        public UpdateCourseMutation(global::StrawberryShake.IOperationExecutor<IUpdateCourseResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _uuidFormatter = serializerResolver.GetInputValueFormatter(\"Uuid\");\r\n            _courseTypeInputFormatter = serializerResolver.GetInputValueFormatter(\"CourseTypeInput\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IUpdateCourseResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpdateCourseResult>> ExecuteAsync(global::System.Guid id, global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest(id, courseInput);\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<IUpdateCourseResult>> Watch(global::System.Guid id, global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(id, courseInput);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Guid id, global::GraphQLDemo.Client.CourseTypeInput? courseInput)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"id\", FormatId(id));\r\n            variables.Add(\"courseInput\", FormatCourseInput(courseInput));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: UpdateCourseMutationDocument.Instance.Hash.Value, name: \"UpdateCourse\", document: UpdateCourseMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatId(global::System.Guid value)\r\n        {\r\n            return _uuidFormatter.Format(value);\r\n        }\r\n\r\n        private global::System.Object? FormatCourseInput(global::GraphQLDemo.Client.CourseTypeInput? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _courseTypeInputFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the UpdateCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation UpdateCourse($id: Uuid!, $courseInput: CourseTypeInput) {\r\n    ///   updateCourse(courseInput: $courseInput, id: $id) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IUpdateCourseMutation : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpdateCourseResult>> ExecuteAsync(global::System.Guid id, global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<IUpdateCourseResult>> Watch(global::System.Guid id, global::GraphQLDemo.Client.CourseTypeInput? courseInput, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetCourseById GraphQL operation\r\n    /// <code>\r\n    /// query GetCourseById($id: Uuid!) {\r\n    ///   courseById(id: $id) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     instructor {\r\n    ///       __typename\r\n    ///       firstName\r\n    ///       ... on InstructorType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     students {\r\n    ///       __typename\r\n    ///       id\r\n    ///       ... on StudentType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseByIdQueryDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private GetCourseByIdQueryDocument()\r\n        {\r\n        }\r\n\r\n        public static GetCourseByIdQueryDocument Instance { get; } = new GetCourseByIdQueryDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x71,\r\n            0x75,\r\n            0x65,\r\n            0x72,\r\n            0x79,\r\n            0x20,\r\n            0x47,\r\n            0x65,\r\n            0x74,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x42,\r\n            0x79,\r\n            0x49,\r\n            0x64,\r\n            0x28,\r\n            0x24,\r\n            0x69,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x55,\r\n            0x75,\r\n            0x69,\r\n            0x64,\r\n            0x21,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x42,\r\n            0x79,\r\n            0x49,\r\n            0x64,\r\n            0x28,\r\n            0x69,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x69,\r\n            0x64,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x6f,\r\n            0x72,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x66,\r\n            0x69,\r\n            0x72,\r\n            0x73,\r\n            0x74,\r\n            0x4e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x49,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x6f,\r\n            0x72,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x73,\r\n            0x74,\r\n            0x75,\r\n            0x64,\r\n            0x65,\r\n            0x6e,\r\n            0x74,\r\n            0x73,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x53,\r\n            0x74,\r\n            0x75,\r\n            0x64,\r\n            0x65,\r\n            0x6e,\r\n            0x74,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"7f80a3718e553ca40c8a4e74ed5d4bfb\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetCourseById GraphQL operation\r\n    /// <code>\r\n    /// query GetCourseById($id: Uuid!) {\r\n    ///   courseById(id: $id) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     instructor {\r\n    ///       __typename\r\n    ///       firstName\r\n    ///       ... on InstructorType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     students {\r\n    ///       __typename\r\n    ///       id\r\n    ///       ... on StudentType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseByIdQuery : global::GraphQLDemo.Client.IGetCourseByIdQuery\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<IGetCourseByIdResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _uuidFormatter;\r\n        public GetCourseByIdQuery(global::StrawberryShake.IOperationExecutor<IGetCourseByIdResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _uuidFormatter = serializerResolver.GetInputValueFormatter(\"Uuid\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCourseByIdResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCourseByIdResult>> ExecuteAsync(global::System.Guid id, global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest(id);\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCourseByIdResult>> Watch(global::System.Guid id, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(id);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Guid id)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"id\", FormatId(id));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: GetCourseByIdQueryDocument.Instance.Hash.Value, name: \"GetCourseById\", document: GetCourseByIdQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatId(global::System.Guid value)\r\n        {\r\n            return _uuidFormatter.Format(value);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetCourseById GraphQL operation\r\n    /// <code>\r\n    /// query GetCourseById($id: Uuid!) {\r\n    ///   courseById(id: $id) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     instructor {\r\n    ///       __typename\r\n    ///       firstName\r\n    ///       ... on InstructorType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     students {\r\n    ///       __typename\r\n    ///       id\r\n    ///       ... on StudentType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCourseByIdQuery : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCourseByIdResult>> ExecuteAsync(global::System.Guid id, global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCourseByIdResult>> Watch(global::System.Guid id, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the DeleteCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation DeleteCourse($id: Uuid!) {\r\n    ///   deleteCourse(id: $id)\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class DeleteCourseMutationDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private DeleteCourseMutationDocument()\r\n        {\r\n        }\r\n\r\n        public static DeleteCourseMutationDocument Instance { get; } = new DeleteCourseMutationDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x6d,\r\n            0x75,\r\n            0x74,\r\n            0x61,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x44,\r\n            0x65,\r\n            0x6c,\r\n            0x65,\r\n            0x74,\r\n            0x65,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x28,\r\n            0x24,\r\n            0x69,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x55,\r\n            0x75,\r\n            0x69,\r\n            0x64,\r\n            0x21,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x64,\r\n            0x65,\r\n            0x6c,\r\n            0x65,\r\n            0x74,\r\n            0x65,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x28,\r\n            0x69,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x69,\r\n            0x64,\r\n            0x29,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"e1c8b51cd3e31ca045d64de8806ba03a\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the DeleteCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation DeleteCourse($id: Uuid!) {\r\n    ///   deleteCourse(id: $id)\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class DeleteCourseMutation : global::GraphQLDemo.Client.IDeleteCourseMutation\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<IDeleteCourseResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _uuidFormatter;\r\n        public DeleteCourseMutation(global::StrawberryShake.IOperationExecutor<IDeleteCourseResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _uuidFormatter = serializerResolver.GetInputValueFormatter(\"Uuid\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IDeleteCourseResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IDeleteCourseResult>> ExecuteAsync(global::System.Guid id, global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest(id);\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<IDeleteCourseResult>> Watch(global::System.Guid id, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(id);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Guid id)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"id\", FormatId(id));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: DeleteCourseMutationDocument.Instance.Hash.Value, name: \"DeleteCourse\", document: DeleteCourseMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatId(global::System.Guid value)\r\n        {\r\n            return _uuidFormatter.Format(value);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the DeleteCourse GraphQL operation\r\n    /// <code>\r\n    /// mutation DeleteCourse($id: Uuid!) {\r\n    ///   deleteCourse(id: $id)\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IDeleteCourseMutation : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IDeleteCourseResult>> ExecuteAsync(global::System.Guid id, global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<IDeleteCourseResult>> Watch(global::System.Guid id, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CourseUpdated GraphQL operation\r\n    /// <code>\r\n    /// subscription CourseUpdated($courseId: Uuid!) {\r\n    ///   courseUpdated(courseId: $courseId) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdatedSubscriptionDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private CourseUpdatedSubscriptionDocument()\r\n        {\r\n        }\r\n\r\n        public static CourseUpdatedSubscriptionDocument Instance { get; } = new CourseUpdatedSubscriptionDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Subscription;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x73,\r\n            0x63,\r\n            0x72,\r\n            0x69,\r\n            0x70,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x55,\r\n            0x70,\r\n            0x64,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x64,\r\n            0x28,\r\n            0x24,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x55,\r\n            0x75,\r\n            0x69,\r\n            0x64,\r\n            0x21,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x55,\r\n            0x70,\r\n            0x64,\r\n            0x61,\r\n            0x74,\r\n            0x65,\r\n            0x64,\r\n            0x28,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x64,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x49,\r\n            0x64,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x6a,\r\n            0x65,\r\n            0x63,\r\n            0x74,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x52,\r\n            0x65,\r\n            0x73,\r\n            0x75,\r\n            0x6c,\r\n            0x74,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"6f16c93fde0be99d712593013f32032d\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CourseUpdated GraphQL operation\r\n    /// <code>\r\n    /// subscription CourseUpdated($courseId: Uuid!) {\r\n    ///   courseUpdated(courseId: $courseId) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdatedSubscription : global::GraphQLDemo.Client.ICourseUpdatedSubscription\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<ICourseUpdatedResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _uuidFormatter;\r\n        public CourseUpdatedSubscription(global::StrawberryShake.IOperationExecutor<ICourseUpdatedResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _uuidFormatter = serializerResolver.GetInputValueFormatter(\"Uuid\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICourseUpdatedResult);\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICourseUpdatedResult>> Watch(global::System.Guid courseId, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(courseId);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Guid courseId)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"courseId\", FormatCourseId(courseId));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: CourseUpdatedSubscriptionDocument.Instance.Hash.Value, name: \"CourseUpdated\", document: CourseUpdatedSubscriptionDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatCourseId(global::System.Guid value)\r\n        {\r\n            return _uuidFormatter.Format(value);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the CourseUpdated GraphQL operation\r\n    /// <code>\r\n    /// subscription CourseUpdated($courseId: Uuid!) {\r\n    ///   courseUpdated(courseId: $courseId) {\r\n    ///     __typename\r\n    ///     id\r\n    ///     name\r\n    ///     subject\r\n    ///     ... on CourseResult {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ICourseUpdatedSubscription : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<ICourseUpdatedResult>> Watch(global::System.Guid courseId, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the Search GraphQL operation\r\n    /// <code>\r\n    /// query Search($term: String!) {\r\n    ///   search(term: $term) {\r\n    ///     __typename\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///       name\r\n    ///       subject\r\n    ///     }\r\n    ///     ... on InstructorType {\r\n    ///       id\r\n    ///       firstName\r\n    ///       lastName\r\n    ///     }\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///     }\r\n    ///     ... on InstructorType {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SearchQueryDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private SearchQueryDocument()\r\n        {\r\n        }\r\n\r\n        public static SearchQueryDocument Instance { get; } = new SearchQueryDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x71,\r\n            0x75,\r\n            0x65,\r\n            0x72,\r\n            0x79,\r\n            0x20,\r\n            0x53,\r\n            0x65,\r\n            0x61,\r\n            0x72,\r\n            0x63,\r\n            0x68,\r\n            0x28,\r\n            0x24,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x6d,\r\n            0x3a,\r\n            0x20,\r\n            0x53,\r\n            0x74,\r\n            0x72,\r\n            0x69,\r\n            0x6e,\r\n            0x67,\r\n            0x21,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x73,\r\n            0x65,\r\n            0x61,\r\n            0x72,\r\n            0x63,\r\n            0x68,\r\n            0x28,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x6d,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x6d,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x6a,\r\n            0x65,\r\n            0x63,\r\n            0x74,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x49,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x6f,\r\n            0x72,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x66,\r\n            0x69,\r\n            0x72,\r\n            0x73,\r\n            0x74,\r\n            0x4e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x6c,\r\n            0x61,\r\n            0x73,\r\n            0x74,\r\n            0x4e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x49,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x6f,\r\n            0x72,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"9ec414c6173aa1ec91a090af6aa3f165\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the Search GraphQL operation\r\n    /// <code>\r\n    /// query Search($term: String!) {\r\n    ///   search(term: $term) {\r\n    ///     __typename\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///       name\r\n    ///       subject\r\n    ///     }\r\n    ///     ... on InstructorType {\r\n    ///       id\r\n    ///       firstName\r\n    ///       lastName\r\n    ///     }\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///     }\r\n    ///     ... on InstructorType {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SearchQuery : global::GraphQLDemo.Client.ISearchQuery\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<ISearchResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;\r\n        public SearchQuery(global::StrawberryShake.IOperationExecutor<ISearchResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _stringFormatter = serializerResolver.GetInputValueFormatter(\"String\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ISearchResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ISearchResult>> ExecuteAsync(global::System.String term, global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest(term);\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<ISearchResult>> Watch(global::System.String term, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(term);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.String term)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"term\", FormatTerm(term));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: SearchQueryDocument.Instance.Hash.Value, name: \"Search\", document: SearchQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatTerm(global::System.String value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                throw new global::System.ArgumentNullException(nameof(value));\r\n            }\r\n\r\n            return _stringFormatter.Format(value);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the Search GraphQL operation\r\n    /// <code>\r\n    /// query Search($term: String!) {\r\n    ///   search(term: $term) {\r\n    ///     __typename\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///       name\r\n    ///       subject\r\n    ///     }\r\n    ///     ... on InstructorType {\r\n    ///       id\r\n    ///       firstName\r\n    ///       lastName\r\n    ///     }\r\n    ///     ... on CourseType {\r\n    ///       id\r\n    ///     }\r\n    ///     ... on InstructorType {\r\n    ///       id\r\n    ///     }\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface ISearchQuery : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ISearchResult>> ExecuteAsync(global::System.String term, global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<ISearchResult>> Watch(global::System.String term, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetInstructions GraphQL operation\r\n    /// <code>\r\n    /// query GetInstructions {\r\n    ///   instructions\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetInstructionsQueryDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private GetInstructionsQueryDocument()\r\n        {\r\n        }\r\n\r\n        public static GetInstructionsQueryDocument Instance { get; } = new GetInstructionsQueryDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x71,\r\n            0x75,\r\n            0x65,\r\n            0x72,\r\n            0x79,\r\n            0x20,\r\n            0x47,\r\n            0x65,\r\n            0x74,\r\n            0x49,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x73,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x69,\r\n            0x6f,\r\n            0x6e,\r\n            0x73,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"27911bb226debc1bd6092d9ab3cc56c2\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetInstructions GraphQL operation\r\n    /// <code>\r\n    /// query GetInstructions {\r\n    ///   instructions\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetInstructionsQuery : global::GraphQLDemo.Client.IGetInstructionsQuery\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<IGetInstructionsResult> _operationExecutor;\r\n        public GetInstructionsQuery(global::StrawberryShake.IOperationExecutor<IGetInstructionsResult> operationExecutor)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetInstructionsResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetInstructionsResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest();\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetInstructionsResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest();\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest()\r\n        {\r\n            return CreateRequest(null);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: GetInstructionsQueryDocument.Instance.Hash.Value, name: \"GetInstructions\", document: GetInstructionsQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest();\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetInstructions GraphQL operation\r\n    /// <code>\r\n    /// query GetInstructions {\r\n    ///   instructions\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetInstructionsQuery : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetInstructionsResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetInstructionsResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetCourses GraphQL operation\r\n    /// <code>\r\n    /// query GetCourses($first: Int, $after: String, $last: Int, $before: String, $where: CourseTypeFilterInput, $order: [CourseTypeSortInput!]) {\r\n    ///   courses(first: $first, last: $last, before: $before, after: $after, order: $order, where: $where) {\r\n    ///     __typename\r\n    ///     nodes {\r\n    ///       __typename\r\n    ///       id\r\n    ///       name\r\n    ///       subject\r\n    ///       instructor {\r\n    ///         __typename\r\n    ///         id\r\n    ///         firstName\r\n    ///         lastName\r\n    ///         salary\r\n    ///         ... on InstructorType {\r\n    ///           id\r\n    ///         }\r\n    ///       }\r\n    ///       ... on CourseType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     pageInfo {\r\n    ///       __typename\r\n    ///       startCursor\r\n    ///       endCursor\r\n    ///       hasNextPage\r\n    ///       hasPreviousPage\r\n    ///     }\r\n    ///     totalCount\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCoursesQueryDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private GetCoursesQueryDocument()\r\n        {\r\n        }\r\n\r\n        public static GetCoursesQueryDocument Instance { get; } = new GetCoursesQueryDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]\r\n        {\r\n            0x71,\r\n            0x75,\r\n            0x65,\r\n            0x72,\r\n            0x79,\r\n            0x20,\r\n            0x47,\r\n            0x65,\r\n            0x74,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x73,\r\n            0x28,\r\n            0x24,\r\n            0x66,\r\n            0x69,\r\n            0x72,\r\n            0x73,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x49,\r\n            0x6e,\r\n            0x74,\r\n            0x2c,\r\n            0x20,\r\n            0x24,\r\n            0x61,\r\n            0x66,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x3a,\r\n            0x20,\r\n            0x53,\r\n            0x74,\r\n            0x72,\r\n            0x69,\r\n            0x6e,\r\n            0x67,\r\n            0x2c,\r\n            0x20,\r\n            0x24,\r\n            0x6c,\r\n            0x61,\r\n            0x73,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x49,\r\n            0x6e,\r\n            0x74,\r\n            0x2c,\r\n            0x20,\r\n            0x24,\r\n            0x62,\r\n            0x65,\r\n            0x66,\r\n            0x6f,\r\n            0x72,\r\n            0x65,\r\n            0x3a,\r\n            0x20,\r\n            0x53,\r\n            0x74,\r\n            0x72,\r\n            0x69,\r\n            0x6e,\r\n            0x67,\r\n            0x2c,\r\n            0x20,\r\n            0x24,\r\n            0x77,\r\n            0x68,\r\n            0x65,\r\n            0x72,\r\n            0x65,\r\n            0x3a,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x46,\r\n            0x69,\r\n            0x6c,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x2c,\r\n            0x20,\r\n            0x24,\r\n            0x6f,\r\n            0x72,\r\n            0x64,\r\n            0x65,\r\n            0x72,\r\n            0x3a,\r\n            0x20,\r\n            0x5b,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x53,\r\n            0x6f,\r\n            0x72,\r\n            0x74,\r\n            0x49,\r\n            0x6e,\r\n            0x70,\r\n            0x75,\r\n            0x74,\r\n            0x21,\r\n            0x5d,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x63,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x73,\r\n            0x28,\r\n            0x66,\r\n            0x69,\r\n            0x72,\r\n            0x73,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x66,\r\n            0x69,\r\n            0x72,\r\n            0x73,\r\n            0x74,\r\n            0x2c,\r\n            0x20,\r\n            0x6c,\r\n            0x61,\r\n            0x73,\r\n            0x74,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x6c,\r\n            0x61,\r\n            0x73,\r\n            0x74,\r\n            0x2c,\r\n            0x20,\r\n            0x62,\r\n            0x65,\r\n            0x66,\r\n            0x6f,\r\n            0x72,\r\n            0x65,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x62,\r\n            0x65,\r\n            0x66,\r\n            0x6f,\r\n            0x72,\r\n            0x65,\r\n            0x2c,\r\n            0x20,\r\n            0x61,\r\n            0x66,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x61,\r\n            0x66,\r\n            0x74,\r\n            0x65,\r\n            0x72,\r\n            0x2c,\r\n            0x20,\r\n            0x6f,\r\n            0x72,\r\n            0x64,\r\n            0x65,\r\n            0x72,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x6f,\r\n            0x72,\r\n            0x64,\r\n            0x65,\r\n            0x72,\r\n            0x2c,\r\n            0x20,\r\n            0x77,\r\n            0x68,\r\n            0x65,\r\n            0x72,\r\n            0x65,\r\n            0x3a,\r\n            0x20,\r\n            0x24,\r\n            0x77,\r\n            0x68,\r\n            0x65,\r\n            0x72,\r\n            0x65,\r\n            0x29,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x6e,\r\n            0x6f,\r\n            0x64,\r\n            0x65,\r\n            0x73,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x75,\r\n            0x62,\r\n            0x6a,\r\n            0x65,\r\n            0x63,\r\n            0x74,\r\n            0x20,\r\n            0x69,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x6f,\r\n            0x72,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x66,\r\n            0x69,\r\n            0x72,\r\n            0x73,\r\n            0x74,\r\n            0x4e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x6c,\r\n            0x61,\r\n            0x73,\r\n            0x74,\r\n            0x4e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x61,\r\n            0x6c,\r\n            0x61,\r\n            0x72,\r\n            0x79,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x49,\r\n            0x6e,\r\n            0x73,\r\n            0x74,\r\n            0x72,\r\n            0x75,\r\n            0x63,\r\n            0x74,\r\n            0x6f,\r\n            0x72,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x2e,\r\n            0x2e,\r\n            0x2e,\r\n            0x20,\r\n            0x6f,\r\n            0x6e,\r\n            0x20,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x65,\r\n            0x54,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x69,\r\n            0x64,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x70,\r\n            0x61,\r\n            0x67,\r\n            0x65,\r\n            0x49,\r\n            0x6e,\r\n            0x66,\r\n            0x6f,\r\n            0x20,\r\n            0x7b,\r\n            0x20,\r\n            0x5f,\r\n            0x5f,\r\n            0x74,\r\n            0x79,\r\n            0x70,\r\n            0x65,\r\n            0x6e,\r\n            0x61,\r\n            0x6d,\r\n            0x65,\r\n            0x20,\r\n            0x73,\r\n            0x74,\r\n            0x61,\r\n            0x72,\r\n            0x74,\r\n            0x43,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x6f,\r\n            0x72,\r\n            0x20,\r\n            0x65,\r\n            0x6e,\r\n            0x64,\r\n            0x43,\r\n            0x75,\r\n            0x72,\r\n            0x73,\r\n            0x6f,\r\n            0x72,\r\n            0x20,\r\n            0x68,\r\n            0x61,\r\n            0x73,\r\n            0x4e,\r\n            0x65,\r\n            0x78,\r\n            0x74,\r\n            0x50,\r\n            0x61,\r\n            0x67,\r\n            0x65,\r\n            0x20,\r\n            0x68,\r\n            0x61,\r\n            0x73,\r\n            0x50,\r\n            0x72,\r\n            0x65,\r\n            0x76,\r\n            0x69,\r\n            0x6f,\r\n            0x75,\r\n            0x73,\r\n            0x50,\r\n            0x61,\r\n            0x67,\r\n            0x65,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x74,\r\n            0x6f,\r\n            0x74,\r\n            0x61,\r\n            0x6c,\r\n            0x43,\r\n            0x6f,\r\n            0x75,\r\n            0x6e,\r\n            0x74,\r\n            0x20,\r\n            0x7d,\r\n            0x20,\r\n            0x7d\r\n        };\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"888d1b0e180ac5776f6855f7bfa0b986\");\r\n\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\r\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetCourses GraphQL operation\r\n    /// <code>\r\n    /// query GetCourses($first: Int, $after: String, $last: Int, $before: String, $where: CourseTypeFilterInput, $order: [CourseTypeSortInput!]) {\r\n    ///   courses(first: $first, last: $last, before: $before, after: $after, order: $order, where: $where) {\r\n    ///     __typename\r\n    ///     nodes {\r\n    ///       __typename\r\n    ///       id\r\n    ///       name\r\n    ///       subject\r\n    ///       instructor {\r\n    ///         __typename\r\n    ///         id\r\n    ///         firstName\r\n    ///         lastName\r\n    ///         salary\r\n    ///         ... on InstructorType {\r\n    ///           id\r\n    ///         }\r\n    ///       }\r\n    ///       ... on CourseType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     pageInfo {\r\n    ///       __typename\r\n    ///       startCursor\r\n    ///       endCursor\r\n    ///       hasNextPage\r\n    ///       hasPreviousPage\r\n    ///     }\r\n    ///     totalCount\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCoursesQuery : global::GraphQLDemo.Client.IGetCoursesQuery\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<IGetCoursesResult> _operationExecutor;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _courseTypeFilterInputFormatter;\r\n        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _courseTypeSortInputFormatter;\r\n        public GetCoursesQuery(global::StrawberryShake.IOperationExecutor<IGetCoursesResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n            _intFormatter = serializerResolver.GetInputValueFormatter(\"Int\");\r\n            _stringFormatter = serializerResolver.GetInputValueFormatter(\"String\");\r\n            _courseTypeFilterInputFormatter = serializerResolver.GetInputValueFormatter(\"CourseTypeFilterInput\");\r\n            _courseTypeSortInputFormatter = serializerResolver.GetInputValueFormatter(\"CourseTypeSortInput\");\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCoursesResult);\r\n\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCoursesResult>> ExecuteAsync(global::System.Int32? first, global::System.String? after, global::System.Int32? last, global::System.String? before, global::GraphQLDemo.Client.CourseTypeFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeSortInput>? order, global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest(first, after, last, before, @where, order);\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCoursesResult>> Watch(global::System.Int32? first, global::System.String? after, global::System.Int32? last, global::System.String? before, global::GraphQLDemo.Client.CourseTypeFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeSortInput>? order, global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest(first, after, last, before, @where, order);\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Int32? first, global::System.String? after, global::System.Int32? last, global::System.String? before, global::GraphQLDemo.Client.CourseTypeFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeSortInput>? order)\r\n        {\r\n            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();\r\n            variables.Add(\"first\", FormatFirst(first));\r\n            variables.Add(\"after\", FormatAfter(after));\r\n            variables.Add(\"last\", FormatLast(last));\r\n            variables.Add(\"before\", FormatBefore(before));\r\n            variables.Add(\"where\", FormatWhere(@where));\r\n            variables.Add(\"order\", FormatOrder(order));\r\n            return CreateRequest(variables);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: GetCoursesQueryDocument.Instance.Hash.Value, name: \"GetCourses\", document: GetCoursesQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);\r\n        }\r\n\r\n        private global::System.Object? FormatFirst(global::System.Int32? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _intFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatAfter(global::System.String? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatLast(global::System.Int32? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _intFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatBefore(global::System.String? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _stringFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatWhere(global::GraphQLDemo.Client.CourseTypeFilterInput? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                return _courseTypeFilterInputFormatter.Format(value);\r\n            }\r\n        }\r\n\r\n        private global::System.Object? FormatOrder(global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeSortInput>? value)\r\n        {\r\n            if (value is null)\r\n            {\r\n                return value;\r\n            }\r\n            else\r\n            {\r\n                var value_list = new global::System.Collections.Generic.List<global::System.Object?>();\r\n                foreach (var value_elm in value)\r\n                {\r\n                    if (value_elm is null)\r\n                    {\r\n                        throw new global::System.ArgumentNullException(nameof(value_elm));\r\n                    }\r\n\r\n                    value_list.Add(_courseTypeSortInputFormatter.Format(value_elm));\r\n                }\r\n\r\n                return value_list;\r\n            }\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest(variables!);\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the operation service of the GetCourses GraphQL operation\r\n    /// <code>\r\n    /// query GetCourses($first: Int, $after: String, $last: Int, $before: String, $where: CourseTypeFilterInput, $order: [CourseTypeSortInput!]) {\r\n    ///   courses(first: $first, last: $last, before: $before, after: $after, order: $order, where: $where) {\r\n    ///     __typename\r\n    ///     nodes {\r\n    ///       __typename\r\n    ///       id\r\n    ///       name\r\n    ///       subject\r\n    ///       instructor {\r\n    ///         __typename\r\n    ///         id\r\n    ///         firstName\r\n    ///         lastName\r\n    ///         salary\r\n    ///         ... on InstructorType {\r\n    ///           id\r\n    ///         }\r\n    ///       }\r\n    ///       ... on CourseType {\r\n    ///         id\r\n    ///       }\r\n    ///     }\r\n    ///     pageInfo {\r\n    ///       __typename\r\n    ///       startCursor\r\n    ///       endCursor\r\n    ///       hasNextPage\r\n    ///       hasPreviousPage\r\n    ///     }\r\n    ///     totalCount\r\n    ///   }\r\n    /// }\r\n    /// </code>\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGetCoursesQuery : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCoursesResult>> ExecuteAsync(global::System.Int32? first, global::System.String? after, global::System.Int32? last, global::System.String? before, global::GraphQLDemo.Client.CourseTypeFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeSortInput>? order, global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCoursesResult>> Watch(global::System.Int32? first, global::System.String? after, global::System.Int32? last, global::System.String? before, global::GraphQLDemo.Client.CourseTypeFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.CourseTypeSortInput>? order, global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the GraphQLDemoClient GraphQL client\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GraphQLDemoClient : global::GraphQLDemo.Client.IGraphQLDemoClient\r\n    {\r\n        private readonly global::GraphQLDemo.Client.ICreateCourseMutation _createCourse;\r\n        private readonly global::GraphQLDemo.Client.ICourseCreatedSubscription _courseCreated;\r\n        private readonly global::GraphQLDemo.Client.IUpdateCourseMutation _updateCourse;\r\n        private readonly global::GraphQLDemo.Client.IGetCourseByIdQuery _getCourseById;\r\n        private readonly global::GraphQLDemo.Client.IDeleteCourseMutation _deleteCourse;\r\n        private readonly global::GraphQLDemo.Client.ICourseUpdatedSubscription _courseUpdated;\r\n        private readonly global::GraphQLDemo.Client.ISearchQuery _search;\r\n        private readonly global::GraphQLDemo.Client.IGetInstructionsQuery _getInstructions;\r\n        private readonly global::GraphQLDemo.Client.IGetCoursesQuery _getCourses;\r\n        public GraphQLDemoClient(global::GraphQLDemo.Client.ICreateCourseMutation createCourse, global::GraphQLDemo.Client.ICourseCreatedSubscription courseCreated, global::GraphQLDemo.Client.IUpdateCourseMutation updateCourse, global::GraphQLDemo.Client.IGetCourseByIdQuery getCourseById, global::GraphQLDemo.Client.IDeleteCourseMutation deleteCourse, global::GraphQLDemo.Client.ICourseUpdatedSubscription courseUpdated, global::GraphQLDemo.Client.ISearchQuery search, global::GraphQLDemo.Client.IGetInstructionsQuery getInstructions, global::GraphQLDemo.Client.IGetCoursesQuery getCourses)\r\n        {\r\n            _createCourse = createCourse ?? throw new global::System.ArgumentNullException(nameof(createCourse));\r\n            _courseCreated = courseCreated ?? throw new global::System.ArgumentNullException(nameof(courseCreated));\r\n            _updateCourse = updateCourse ?? throw new global::System.ArgumentNullException(nameof(updateCourse));\r\n            _getCourseById = getCourseById ?? throw new global::System.ArgumentNullException(nameof(getCourseById));\r\n            _deleteCourse = deleteCourse ?? throw new global::System.ArgumentNullException(nameof(deleteCourse));\r\n            _courseUpdated = courseUpdated ?? throw new global::System.ArgumentNullException(nameof(courseUpdated));\r\n            _search = search ?? throw new global::System.ArgumentNullException(nameof(search));\r\n            _getInstructions = getInstructions ?? throw new global::System.ArgumentNullException(nameof(getInstructions));\r\n            _getCourses = getCourses ?? throw new global::System.ArgumentNullException(nameof(getCourses));\r\n        }\r\n\r\n        public static global::System.String ClientName => \"GraphQLDemoClient\";\r\n        public global::GraphQLDemo.Client.ICreateCourseMutation CreateCourse => _createCourse;\r\n        public global::GraphQLDemo.Client.ICourseCreatedSubscription CourseCreated => _courseCreated;\r\n        public global::GraphQLDemo.Client.IUpdateCourseMutation UpdateCourse => _updateCourse;\r\n        public global::GraphQLDemo.Client.IGetCourseByIdQuery GetCourseById => _getCourseById;\r\n        public global::GraphQLDemo.Client.IDeleteCourseMutation DeleteCourse => _deleteCourse;\r\n        public global::GraphQLDemo.Client.ICourseUpdatedSubscription CourseUpdated => _courseUpdated;\r\n        public global::GraphQLDemo.Client.ISearchQuery Search => _search;\r\n        public global::GraphQLDemo.Client.IGetInstructionsQuery GetInstructions => _getInstructions;\r\n        public global::GraphQLDemo.Client.IGetCoursesQuery GetCourses => _getCourses;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Represents the GraphQLDemoClient GraphQL client\r\n    /// </summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public interface IGraphQLDemoClient\r\n    {\r\n        global::GraphQLDemo.Client.ICreateCourseMutation CreateCourse { get; }\r\n\r\n        global::GraphQLDemo.Client.ICourseCreatedSubscription CourseCreated { get; }\r\n\r\n        global::GraphQLDemo.Client.IUpdateCourseMutation UpdateCourse { get; }\r\n\r\n        global::GraphQLDemo.Client.IGetCourseByIdQuery GetCourseById { get; }\r\n\r\n        global::GraphQLDemo.Client.IDeleteCourseMutation DeleteCourse { get; }\r\n\r\n        global::GraphQLDemo.Client.ICourseUpdatedSubscription CourseUpdated { get; }\r\n\r\n        global::GraphQLDemo.Client.ISearchQuery Search { get; }\r\n\r\n        global::GraphQLDemo.Client.IGetInstructionsQuery GetInstructions { get; }\r\n\r\n        global::GraphQLDemo.Client.IGetCoursesQuery GetCourses { get; }\r\n    }\r\n}\r\n\r\nnamespace GraphQLDemo.Client.State\r\n{\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseResultEntity\r\n    {\r\n        public CourseResultEntity(global::System.Guid id = default !, global::System.String? name = default !, global::GraphQLDemo.Client.Subject subject = default !)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Subject = subject;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeEntity\r\n    {\r\n        public CourseTypeEntity(global::System.Guid id = default !, global::System.String? name = default !, global::StrawberryShake.EntityId instructor = default !, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? students = default !, global::System.String __typename = default !, global::GraphQLDemo.Client.Subject subject = default !)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Instructor = instructor;\r\n            Students = students;\r\n            this.__typename = __typename;\r\n            Subject = subject;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? Name { get; }\r\n        public global::StrawberryShake.EntityId Instructor { get; }\r\n        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Students { get; }\r\n        ///<summary>The name of the current Object type at runtime.</summary>\r\n        public global::System.String __typename { get; }\r\n        public global::GraphQLDemo.Client.Subject Subject { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class InstructorTypeEntity\r\n    {\r\n        public InstructorTypeEntity(global::System.String? firstName = default !, global::System.String __typename = default !, global::System.Guid id = default !, global::System.String? lastName = default !, global::System.Double salary = default !)\r\n        {\r\n            FirstName = firstName;\r\n            this.__typename = __typename;\r\n            Id = id;\r\n            LastName = lastName;\r\n            Salary = salary;\r\n        }\r\n\r\n        public global::System.String? FirstName { get; }\r\n        ///<summary>The name of the current Object type at runtime.</summary>\r\n        public global::System.String __typename { get; }\r\n        public global::System.Guid Id { get; }\r\n        public global::System.String? LastName { get; }\r\n        public global::System.Double Salary { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class StudentTypeEntity\r\n    {\r\n        public StudentTypeEntity(global::System.Guid id = default !)\r\n        {\r\n            Id = id;\r\n        }\r\n\r\n        public global::System.Guid Id { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourseResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.CreateCourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CreateCourse_CreateCourse_CourseResult> _createCourse_CreateCourse_CourseResultFromCourseResultEntityMapper;\r\n        public CreateCourseResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CreateCourse_CreateCourse_CourseResult> createCourse_CreateCourse_CourseResultFromCourseResultEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _createCourse_CreateCourse_CourseResultFromCourseResultEntityMapper = createCourse_CreateCourse_CourseResultFromCourseResultEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createCourse_CreateCourse_CourseResultFromCourseResultEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.ICreateCourseResult);\r\n\r\n        public CreateCourseResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is CreateCourseResultInfo info)\r\n            {\r\n                return new CreateCourseResult(MapICreateCourse_CreateCourse(info.CreateCourse, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"CreateCourseResultInfo expected.\");\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.ICreateCourse_CreateCourse? MapICreateCourse_CreateCourse(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _createCourse_CreateCourse_CourseResultFromCourseResultEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseResultEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourseResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public CreateCourseResultInfo(global::StrawberryShake.EntityId? createCourse, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            CreateCourse = createCourse;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::StrawberryShake.EntityId? CreateCourse { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new CreateCourseResultInfo(CreateCourse, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourse_CreateCourse_CourseResultFromCourseResultEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CreateCourse_CreateCourse_CourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public CreateCourse_CreateCourse_CourseResultFromCourseResultEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public CreateCourse_CreateCourse_CourseResult Map(global::GraphQLDemo.Client.State.CourseResultEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new CreateCourse_CreateCourse_CourseResult(entity.Id, entity.Name, entity.Subject);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreatedResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.CourseCreatedResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CourseCreated_CourseCreated_CourseResult> _courseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper;\r\n        public CourseCreatedResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CourseCreated_CourseCreated_CourseResult> courseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _courseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper = courseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper ?? throw new global::System.ArgumentNullException(nameof(courseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.ICourseCreatedResult);\r\n\r\n        public CourseCreatedResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is CourseCreatedResultInfo info)\r\n            {\r\n                return new CourseCreatedResult(MapICourseCreated_CourseCreated(info.CourseCreated, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"CourseCreatedResultInfo expected.\");\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.ICourseCreated_CourseCreated? MapICourseCreated_CourseCreated(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _courseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseResultEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreatedResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public CourseCreatedResultInfo(global::StrawberryShake.EntityId? courseCreated, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            CourseCreated = courseCreated;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::StrawberryShake.EntityId? CourseCreated { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new CourseCreatedResultInfo(CourseCreated, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CourseCreated_CourseCreated_CourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public CourseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public CourseCreated_CourseCreated_CourseResult Map(global::GraphQLDemo.Client.State.CourseResultEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new CourseCreated_CourseCreated_CourseResult(entity.Id, entity.Name, entity.Subject);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourseResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.UpdateCourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, UpdateCourse_UpdateCourse_CourseResult> _updateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper;\r\n        public UpdateCourseResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, UpdateCourse_UpdateCourse_CourseResult> updateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _updateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper = updateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper ?? throw new global::System.ArgumentNullException(nameof(updateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.IUpdateCourseResult);\r\n\r\n        public UpdateCourseResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is UpdateCourseResultInfo info)\r\n            {\r\n                return new UpdateCourseResult(MapIUpdateCourse_UpdateCourse(info.UpdateCourse, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"UpdateCourseResultInfo expected.\");\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IUpdateCourse_UpdateCourse? MapIUpdateCourse_UpdateCourse(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _updateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseResultEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourseResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public UpdateCourseResultInfo(global::StrawberryShake.EntityId? updateCourse, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            UpdateCourse = updateCourse;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::StrawberryShake.EntityId? UpdateCourse { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new UpdateCourseResultInfo(UpdateCourse, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, UpdateCourse_UpdateCourse_CourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public UpdateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public UpdateCourse_UpdateCourse_CourseResult Map(global::GraphQLDemo.Client.State.CourseResultEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new UpdateCourse_UpdateCourse_CourseResult(entity.Id, entity.Name, entity.Subject);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseByIdResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.GetCourseByIdResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, GetCourseById_CourseById_CourseType> _getCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper;\r\n        public GetCourseByIdResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, GetCourseById_CourseById_CourseType> getCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _getCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper = getCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.IGetCourseByIdResult);\r\n\r\n        public GetCourseByIdResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is GetCourseByIdResultInfo info)\r\n            {\r\n                return new GetCourseByIdResult(MapIGetCourseById_CourseById(info.CourseById, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"GetCourseByIdResultInfo expected.\");\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourseById_CourseById? MapIGetCourseById_CourseById(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _getCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseTypeEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseByIdResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public GetCourseByIdResultInfo(global::StrawberryShake.EntityId? courseById, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            CourseById = courseById;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::StrawberryShake.EntityId? CourseById { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new GetCourseByIdResultInfo(CourseById, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, GetCourseById_CourseById_CourseType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourseById_CourseById_Instructor_InstructorType> _getCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.StudentTypeEntity, GetCourseById_CourseById_Students_StudentType> _getCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper;\r\n        public GetCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourseById_CourseById_Instructor_InstructorType> getCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.StudentTypeEntity, GetCourseById_CourseById_Students_StudentType> getCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _getCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper = getCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper));\r\n            _getCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper = getCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper));\r\n        }\r\n\r\n        public GetCourseById_CourseById_CourseType Map(global::GraphQLDemo.Client.State.CourseTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new GetCourseById_CourseById_CourseType(entity.Id, entity.Name, MapNonNullableIGetCourseById_CourseById_Instructor(entity.Instructor, snapshot), MapIGetCourseById_CourseById_StudentsArray(entity.Students, snapshot));\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourseById_CourseById_Instructor MapNonNullableIGetCourseById_CourseById_Instructor(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _getCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.InstructorTypeEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourseById_CourseById_Students?>? MapIGetCourseById_CourseById_StudentsArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (list is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var studentTypes = new global::System.Collections.Generic.List<global::GraphQLDemo.Client.IGetCourseById_CourseById_Students?>();\r\n            foreach (global::StrawberryShake.EntityId? child in list)\r\n            {\r\n                studentTypes.Add(MapIGetCourseById_CourseById_Students(child, snapshot));\r\n            }\r\n\r\n            return studentTypes;\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourseById_CourseById_Students? MapIGetCourseById_CourseById_Students(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"StudentType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _getCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.StudentTypeEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourseById_CourseById_Instructor_InstructorType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public GetCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public GetCourseById_CourseById_Instructor_InstructorType Map(global::GraphQLDemo.Client.State.InstructorTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new GetCourseById_CourseById_Instructor_InstructorType(entity.FirstName);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.StudentTypeEntity, GetCourseById_CourseById_Students_StudentType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public GetCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public GetCourseById_CourseById_Students_StudentType Map(global::GraphQLDemo.Client.State.StudentTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new GetCourseById_CourseById_Students_StudentType(entity.Id);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class DeleteCourseResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.DeleteCourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public DeleteCourseResultFactory(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.IDeleteCourseResult);\r\n\r\n        public DeleteCourseResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is DeleteCourseResultInfo info)\r\n            {\r\n                return new DeleteCourseResult(info.DeleteCourse);\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"DeleteCourseResultInfo expected.\");\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class DeleteCourseResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public DeleteCourseResultInfo(global::System.Boolean deleteCourse, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            DeleteCourse = deleteCourse;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::System.Boolean DeleteCourse { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new DeleteCourseResultInfo(DeleteCourse, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdatedResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.CourseUpdatedResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CourseUpdated_CourseUpdated_CourseResult> _courseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper;\r\n        public CourseUpdatedResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CourseUpdated_CourseUpdated_CourseResult> courseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _courseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper = courseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper ?? throw new global::System.ArgumentNullException(nameof(courseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.ICourseUpdatedResult);\r\n\r\n        public CourseUpdatedResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is CourseUpdatedResultInfo info)\r\n            {\r\n                return new CourseUpdatedResult(MapICourseUpdated_CourseUpdated(info.CourseUpdated, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"CourseUpdatedResultInfo expected.\");\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.ICourseUpdated_CourseUpdated? MapICourseUpdated_CourseUpdated(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _courseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseResultEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdatedResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public CourseUpdatedResultInfo(global::StrawberryShake.EntityId? courseUpdated, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            CourseUpdated = courseUpdated;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::StrawberryShake.EntityId? CourseUpdated { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new CourseUpdatedResultInfo(CourseUpdated, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, CourseUpdated_CourseUpdated_CourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public CourseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public CourseUpdated_CourseUpdated_CourseResult Map(global::GraphQLDemo.Client.State.CourseResultEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new CourseUpdated_CourseUpdated_CourseResult(entity.Id, entity.Name, entity.Subject);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SearchResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.SearchResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, Search_Search_CourseType> _search_Search_CourseTypeFromCourseTypeEntityMapper;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, Search_Search_InstructorType> _search_Search_InstructorTypeFromInstructorTypeEntityMapper;\r\n        public SearchResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, Search_Search_CourseType> search_Search_CourseTypeFromCourseTypeEntityMapper, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, Search_Search_InstructorType> search_Search_InstructorTypeFromInstructorTypeEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _search_Search_CourseTypeFromCourseTypeEntityMapper = search_Search_CourseTypeFromCourseTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(search_Search_CourseTypeFromCourseTypeEntityMapper));\r\n            _search_Search_InstructorTypeFromInstructorTypeEntityMapper = search_Search_InstructorTypeFromInstructorTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(search_Search_InstructorTypeFromInstructorTypeEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.ISearchResult);\r\n\r\n        public SearchResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is SearchResultInfo info)\r\n            {\r\n                return new SearchResult(MapISearch_SearchArray(info.Search, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"SearchResultInfo expected.\");\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.ISearch_Search?>? MapISearch_SearchArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (list is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var searchResults = new global::System.Collections.Generic.List<global::GraphQLDemo.Client.ISearch_Search?>();\r\n            foreach (global::StrawberryShake.EntityId? child in list)\r\n            {\r\n                searchResults.Add(MapISearch_Search(child, snapshot));\r\n            }\r\n\r\n            return searchResults;\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.ISearch_Search? MapISearch_Search(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _search_Search_CourseTypeFromCourseTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseTypeEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _search_Search_InstructorTypeFromInstructorTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.InstructorTypeEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SearchResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public SearchResultInfo(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? search, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            Search = search;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Search { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new SearchResultInfo(Search, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class Search_Search_CourseTypeFromCourseTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, Search_Search_CourseType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public Search_Search_CourseTypeFromCourseTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public Search_Search_CourseType Map(global::GraphQLDemo.Client.State.CourseTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new Search_Search_CourseType(entity.__typename, entity.Id, entity.Name, entity.Subject);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class Search_Search_InstructorTypeFromInstructorTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, Search_Search_InstructorType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public Search_Search_InstructorTypeFromInstructorTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public Search_Search_InstructorType Map(global::GraphQLDemo.Client.State.InstructorTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new Search_Search_InstructorType(entity.__typename, entity.Id, entity.FirstName, entity.LastName);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetInstructionsResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.GetInstructionsResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public GetInstructionsResultFactory(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.IGetInstructionsResult);\r\n\r\n        public GetInstructionsResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is GetInstructionsResultInfo info)\r\n            {\r\n                return new GetInstructionsResult(info.Instructions);\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"GetInstructionsResultInfo expected.\");\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetInstructionsResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public GetInstructionsResultInfo(global::System.String? instructions, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            Instructions = instructions;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::System.String? Instructions { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new GetInstructionsResultInfo(Instructions, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCoursesResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.GetCoursesResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, GetCourses_Courses_Nodes_CourseType> _getCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourses_Courses_Nodes_Instructor_InstructorType> _getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper;\r\n        public GetCoursesResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, GetCourses_Courses_Nodes_CourseType> getCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourses_Courses_Nodes_Instructor_InstructorType> getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _getCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper = getCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper));\r\n            _getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper = getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::GraphQLDemo.Client.IGetCoursesResult);\r\n\r\n        public GetCoursesResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is GetCoursesResultInfo info)\r\n            {\r\n                return new GetCoursesResult(MapIGetCourses_Courses(info.Courses, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"GetCoursesResultInfo expected.\");\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourses_Courses? MapIGetCourses_Courses(global::GraphQLDemo.Client.State.CourseTypeConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (data is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            IGetCourses_Courses returnValue = default !;\r\n            if (data?.__typename.Equals(\"CourseTypeConnection\", global::System.StringComparison.Ordinal) ?? false)\r\n            {\r\n                returnValue = new GetCourses_Courses_CourseTypeConnection(MapIGetCourses_Courses_NodesArray(data.Nodes, snapshot), MapNonNullableIGetCourses_Courses_PageInfo(data.PageInfo ?? throw new global::System.ArgumentNullException(), snapshot), data.TotalCount ?? throw new global::System.ArgumentNullException());\r\n            }\r\n            else\r\n            {\r\n                throw new global::System.NotSupportedException();\r\n            }\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::GraphQLDemo.Client.IGetCourses_Courses_Nodes?>? MapIGetCourses_Courses_NodesArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (list is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var courseTypes = new global::System.Collections.Generic.List<global::GraphQLDemo.Client.IGetCourses_Courses_Nodes?>();\r\n            foreach (global::StrawberryShake.EntityId? child in list)\r\n            {\r\n                courseTypes.Add(MapIGetCourses_Courses_Nodes(child, snapshot));\r\n            }\r\n\r\n            return courseTypes;\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourses_Courses_Nodes? MapIGetCourses_Courses_Nodes(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"CourseType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _getCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.CourseTypeEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourses_Courses_Nodes_Instructor MapNonNullableIGetCourses_Courses_Nodes_Instructor(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.InstructorTypeEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourses_Courses_PageInfo MapNonNullableIGetCourses_Courses_PageInfo(global::GraphQLDemo.Client.State.PageInfoData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            IGetCourses_Courses_PageInfo returnValue = default !;\r\n            if (data.__typename.Equals(\"PageInfo\", global::System.StringComparison.Ordinal))\r\n            {\r\n                returnValue = new GetCourses_Courses_PageInfo_PageInfo(data.StartCursor, data.EndCursor, data.HasNextPage ?? throw new global::System.ArgumentNullException(), data.HasPreviousPage ?? throw new global::System.ArgumentNullException());\r\n            }\r\n            else\r\n            {\r\n                throw new global::System.NotSupportedException();\r\n            }\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCoursesResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public GetCoursesResultInfo(global::GraphQLDemo.Client.State.CourseTypeConnectionData? courses, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            Courses = courses;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::GraphQLDemo.Client.State.CourseTypeConnectionData? Courses { get; }\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new GetCoursesResultInfo(Courses, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, GetCourses_Courses_Nodes_CourseType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourses_Courses_Nodes_Instructor_InstructorType> _getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper;\r\n        public GetCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourses_Courses_Nodes_Instructor_InstructorType> getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper = getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper));\r\n        }\r\n\r\n        public GetCourses_Courses_Nodes_CourseType Map(global::GraphQLDemo.Client.State.CourseTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new GetCourses_Courses_Nodes_CourseType(entity.Id, entity.Name, entity.Subject, MapNonNullableIGetCourses_Courses_Nodes_Instructor(entity.Instructor, snapshot));\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.IGetCourses_Courses_Nodes_Instructor MapNonNullableIGetCourses_Courses_Nodes_Instructor(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _getCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper.Map(snapshot.GetEntity<global::GraphQLDemo.Client.State.InstructorTypeEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper : global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, GetCourses_Courses_Nodes_Instructor_InstructorType>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public GetCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public GetCourses_Courses_Nodes_Instructor_InstructorType Map(global::GraphQLDemo.Client.State.InstructorTypeEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new GetCourses_Courses_Nodes_Instructor_InstructorType(entity.Id, entity.FirstName, entity.LastName, entity.Salary);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    internal interface ICourseTypeInputInfo\r\n    {\r\n        global::System.Boolean IsNameSet { get; }\r\n\r\n        global::System.Boolean IsSubjectSet { get; }\r\n\r\n        global::System.Boolean IsInstructorIdSet { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    internal interface ICourseTypeFilterInputInfo\r\n    {\r\n        global::System.Boolean IsAndSet { get; }\r\n\r\n        global::System.Boolean IsOrSet { get; }\r\n\r\n        global::System.Boolean IsIdSet { get; }\r\n\r\n        global::System.Boolean IsNameSet { get; }\r\n\r\n        global::System.Boolean IsSubjectSet { get; }\r\n\r\n        global::System.Boolean IsInstructorIdSet { get; }\r\n\r\n        global::System.Boolean IsCreatorIdSet { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    internal interface IComparableGuidOperationFilterInputInfo\r\n    {\r\n        global::System.Boolean IsEqSet { get; }\r\n\r\n        global::System.Boolean IsNeqSet { get; }\r\n\r\n        global::System.Boolean IsInSet { get; }\r\n\r\n        global::System.Boolean IsNinSet { get; }\r\n\r\n        global::System.Boolean IsGtSet { get; }\r\n\r\n        global::System.Boolean IsNgtSet { get; }\r\n\r\n        global::System.Boolean IsGteSet { get; }\r\n\r\n        global::System.Boolean IsNgteSet { get; }\r\n\r\n        global::System.Boolean IsLtSet { get; }\r\n\r\n        global::System.Boolean IsNltSet { get; }\r\n\r\n        global::System.Boolean IsLteSet { get; }\r\n\r\n        global::System.Boolean IsNlteSet { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    internal interface IStringOperationFilterInputInfo\r\n    {\r\n        global::System.Boolean IsAndSet { get; }\r\n\r\n        global::System.Boolean IsOrSet { get; }\r\n\r\n        global::System.Boolean IsEqSet { get; }\r\n\r\n        global::System.Boolean IsNeqSet { get; }\r\n\r\n        global::System.Boolean IsContainsSet { get; }\r\n\r\n        global::System.Boolean IsNcontainsSet { get; }\r\n\r\n        global::System.Boolean IsInSet { get; }\r\n\r\n        global::System.Boolean IsNinSet { get; }\r\n\r\n        global::System.Boolean IsStartsWithSet { get; }\r\n\r\n        global::System.Boolean IsNstartsWithSet { get; }\r\n\r\n        global::System.Boolean IsEndsWithSet { get; }\r\n\r\n        global::System.Boolean IsNendsWithSet { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    internal interface ISubjectOperationFilterInputInfo\r\n    {\r\n        global::System.Boolean IsEqSet { get; }\r\n\r\n        global::System.Boolean IsNeqSet { get; }\r\n\r\n        global::System.Boolean IsInSet { get; }\r\n\r\n        global::System.Boolean IsNinSet { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    internal interface ICourseTypeSortInputInfo\r\n    {\r\n        global::System.Boolean IsNameSet { get; }\r\n\r\n        global::System.Boolean IsSubjectSet { get; }\r\n\r\n        global::System.Boolean IsCreatorIdSet { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CreateCourseBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICreateCourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICreateCourseResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject> _subjectParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        public CreateCourseBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICreateCourseResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _subjectParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject>(\"Subject\") ?? throw new global::System.ArgumentException(\"No serializer for type `Subject` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<ICreateCourseResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (ICreateCourseResult Result, CreateCourseResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<ICreateCourseResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (ICreateCourseResult, CreateCourseResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::StrawberryShake.EntityId? createCourseId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                createCourseId = UpdateICreateCourse_CreateCourseEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"createCourse\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new CreateCourseResultInfo(createCourseId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateICreateCourse_CreateCourseEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseResultEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject DeserializeNonNullableSubject(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _subjectParser.Parse(obj.Value.GetString()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseCreatedBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseCreatedResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseCreatedResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject> _subjectParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        public CourseCreatedBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseCreatedResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _subjectParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject>(\"Subject\") ?? throw new global::System.ArgumentException(\"No serializer for type `Subject` found.\");\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<ICourseCreatedResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (ICourseCreatedResult Result, CourseCreatedResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<ICourseCreatedResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (ICourseCreatedResult, CourseCreatedResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::StrawberryShake.EntityId? courseCreatedId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                courseCreatedId = UpdateICourseCreated_CourseCreatedEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"courseCreated\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new CourseCreatedResultInfo(courseCreatedId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateICourseCreated_CourseCreatedEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseResultEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject DeserializeNonNullableSubject(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _subjectParser.Parse(obj.Value.GetString()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class UpdateCourseBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IUpdateCourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IUpdateCourseResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject> _subjectParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        public UpdateCourseBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IUpdateCourseResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _subjectParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject>(\"Subject\") ?? throw new global::System.ArgumentException(\"No serializer for type `Subject` found.\");\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<IUpdateCourseResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (IUpdateCourseResult Result, UpdateCourseResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<IUpdateCourseResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (IUpdateCourseResult, UpdateCourseResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::StrawberryShake.EntityId? updateCourseId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                updateCourseId = UpdateIUpdateCourse_UpdateCourseEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"updateCourse\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new UpdateCourseResultInfo(updateCourseId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateIUpdateCourse_UpdateCourseEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseResultEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject DeserializeNonNullableSubject(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _subjectParser.Parse(obj.Value.GetString()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCourseByIdBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCourseByIdResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCourseByIdResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        public GetCourseByIdBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCourseByIdResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<IGetCourseByIdResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (IGetCourseByIdResult Result, GetCourseByIdResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<IGetCourseByIdResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (IGetCourseByIdResult, GetCourseByIdResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::StrawberryShake.EntityId? courseByIdId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                courseByIdId = UpdateIGetCourseById_CourseByIdEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"courseById\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new GetCourseByIdResultInfo(courseByIdId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateIGetCourseById_CourseByIdEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), UpdateNonNullableIGetCourseById_CourseById_InstructorEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"instructor\"), entityIds), UpdateIGetCourseById_CourseById_StudentsEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"students\"), entityIds), entity.__typename, entity.Subject));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), UpdateNonNullableIGetCourseById_CourseById_InstructorEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"instructor\"), entityIds), UpdateIGetCourseById_CourseById_StudentsEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"students\"), entityIds), default !, default !));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId UpdateNonNullableIGetCourseById_CourseById_InstructorEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.InstructorTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.InstructorTypeEntity(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstName\")), entity.__typename, entity.Id, entity.LastName, entity.Salary));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.InstructorTypeEntity(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstName\")), default !, default !, default !, default !));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIGetCourseById_CourseById_StudentsEntityArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var studentTypes = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();\r\n            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())\r\n            {\r\n                studentTypes.Add(UpdateIGetCourseById_CourseById_StudentsEntity(session, child, entityIds));\r\n            }\r\n\r\n            return studentTypes;\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateIGetCourseById_CourseById_StudentsEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"StudentType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.StudentTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.StudentTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.StudentTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class DeleteCourseBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IDeleteCourseResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IDeleteCourseResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;\r\n        public DeleteCourseBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IDeleteCourseResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>(\"Boolean\") ?? throw new global::System.ArgumentException(\"No serializer for type `Boolean` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<IDeleteCourseResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (IDeleteCourseResult Result, DeleteCourseResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<IDeleteCourseResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (IDeleteCourseResult, DeleteCourseResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new DeleteCourseResultInfo(DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"deleteCourse\")), entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _booleanParser.Parse(obj.Value.GetBoolean()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseUpdatedBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseUpdatedResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseUpdatedResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject> _subjectParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        public CourseUpdatedBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseUpdatedResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _subjectParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject>(\"Subject\") ?? throw new global::System.ArgumentException(\"No serializer for type `Subject` found.\");\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<ICourseUpdatedResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (ICourseUpdatedResult Result, CourseUpdatedResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<ICourseUpdatedResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (ICourseUpdatedResult, CourseUpdatedResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::StrawberryShake.EntityId? courseUpdatedId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                courseUpdatedId = UpdateICourseUpdated_CourseUpdatedEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"courseUpdated\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new CourseUpdatedResultInfo(courseUpdatedId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateICourseUpdated_CourseUpdatedEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseResult\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseResultEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseResultEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject DeserializeNonNullableSubject(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _subjectParser.Parse(obj.Value.GetString()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class SearchBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ISearchResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ISearchResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject> _subjectParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        public SearchBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ISearchResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _subjectParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject>(\"Subject\") ?? throw new global::System.ArgumentException(\"No serializer for type `Subject` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<ISearchResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (ISearchResult Result, SearchResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<ISearchResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (ISearchResult, SearchResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? searchId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                searchId = UpdateISearch_SearchEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"search\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new SearchResultInfo(searchId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateISearch_SearchEntityArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var searchResults = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();\r\n            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())\r\n            {\r\n                searchResults.Add(UpdateISearch_SearchEntity(session, child, entityIds));\r\n            }\r\n\r\n            return searchResults;\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateISearch_SearchEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), entity.Instructor, entity.Students, DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"__typename\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), default !, default !, DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"__typename\")), DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            if (entityId.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.InstructorTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.InstructorTypeEntity(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstName\")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"__typename\")), DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"lastName\")), entity.Salary));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.InstructorTypeEntity(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstName\")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"__typename\")), DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"lastName\")), default !));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject DeserializeNonNullableSubject(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _subjectParser.Parse(obj.Value.GetString()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetInstructionsBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetInstructionsResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetInstructionsResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        public GetInstructionsBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetInstructionsResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<IGetInstructionsResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (IGetInstructionsResult Result, GetInstructionsResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<IGetInstructionsResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (IGetInstructionsResult, GetInstructionsResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new GetInstructionsResultInfo(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"instructions\")), entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GetCoursesBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCoursesResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCoursesResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject> _subjectParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::GraphQLDemo.Client.SortEnumType> _sortEnumTypeParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Guid> _uuidParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Double, global::System.Double> _floatParser;\r\n        public GetCoursesBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCoursesResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _subjectParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.Subject>(\"Subject\") ?? throw new global::System.ArgumentException(\"No serializer for type `Subject` found.\");\r\n            _sortEnumTypeParser = serializerResolver.GetLeafValueParser<global::System.String, global::GraphQLDemo.Client.SortEnumType>(\"SortEnumType\") ?? throw new global::System.ArgumentException(\"No serializer for type `SortEnumType` found.\");\r\n            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>(\"Int\") ?? throw new global::System.ArgumentException(\"No serializer for type `Int` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n            _uuidParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Guid>(\"Uuid\") ?? throw new global::System.ArgumentException(\"No serializer for type `Uuid` found.\");\r\n            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>(\"Boolean\") ?? throw new global::System.ArgumentException(\"No serializer for type `Boolean` found.\");\r\n            _floatParser = serializerResolver.GetLeafValueParser<global::System.Double, global::System.Double>(\"Float\") ?? throw new global::System.ArgumentException(\"No serializer for type `Float` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<IGetCoursesResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (IGetCoursesResult Result, GetCoursesResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]\r\n                    {\r\n                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                errors = new global::StrawberryShake.IClientError[]\r\n                {\r\n                    new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { \"body\", response.Body?.RootElement.ToString() } })\r\n                };\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<IGetCoursesResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (IGetCoursesResult, GetCoursesResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::GraphQLDemo.Client.State.CourseTypeConnectionData? coursesId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                coursesId = DeserializeIGetCourses_Courses(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"courses\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new GetCoursesResultInfo(coursesId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.State.CourseTypeConnectionData? DeserializeIGetCourses_Courses(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var typename = obj.Value.GetProperty(\"__typename\").GetString();\r\n            if (typename?.Equals(\"CourseTypeConnection\", global::System.StringComparison.Ordinal) ?? false)\r\n            {\r\n                return new global::GraphQLDemo.Client.State.CourseTypeConnectionData(typename, nodes: UpdateIGetCourses_Courses_NodesEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"nodes\"), entityIds), pageInfo: DeserializeNonNullableIGetCourses_Courses_PageInfo(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"pageInfo\")), totalCount: DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"totalCount\")));\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIGetCourses_Courses_NodesEntityArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var courseTypes = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();\r\n            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())\r\n            {\r\n                courseTypes.Add(UpdateIGetCourses_Courses_NodesEntity(session, child, entityIds));\r\n            }\r\n\r\n            return courseTypes;\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateIGetCourses_Courses_NodesEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"CourseType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.CourseTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), UpdateNonNullableIGetCourses_Courses_Nodes_InstructorEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"instructor\"), entityIds), entity.Students, entity.__typename, DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.CourseTypeEntity(DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"name\")), UpdateNonNullableIGetCourses_Courses_Nodes_InstructorEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"instructor\"), entityIds), default !, default !, DeserializeNonNullableSubject(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"subject\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Guid DeserializeNonNullableGuid(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _uuidParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.Subject DeserializeNonNullableSubject(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _subjectParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId UpdateNonNullableIGetCourses_Courses_Nodes_InstructorEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"InstructorType\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::GraphQLDemo.Client.State.InstructorTypeEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.InstructorTypeEntity(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstName\")), entity.__typename, DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"lastName\")), DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"salary\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::GraphQLDemo.Client.State.InstructorTypeEntity(DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstName\")), default !, DeserializeNonNullableGuid(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"lastName\")), DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"salary\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Double DeserializeNonNullableDouble(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _floatParser.Parse(obj.Value.GetDouble()!);\r\n        }\r\n\r\n        private global::GraphQLDemo.Client.State.PageInfoData DeserializeNonNullableIGetCourses_Courses_PageInfo(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            var typename = obj.Value.GetProperty(\"__typename\").GetString();\r\n            if (typename?.Equals(\"PageInfo\", global::System.StringComparison.Ordinal) ?? false)\r\n            {\r\n                return new global::GraphQLDemo.Client.State.PageInfoData(typename, startCursor: DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"startCursor\")), endCursor: DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"endCursor\")), hasNextPage: DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"hasNextPage\")), hasPreviousPage: DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"hasPreviousPage\")));\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _booleanParser.Parse(obj.Value.GetBoolean()!);\r\n        }\r\n\r\n        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _intParser.Parse(obj.Value.GetInt32()!);\r\n        }\r\n    }\r\n\r\n    ///<summary>A connection to a list of items.</summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class CourseTypeConnectionData\r\n    {\r\n        public CourseTypeConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? nodes = default !, global::GraphQLDemo.Client.State.PageInfoData? pageInfo = default !, global::System.Int32? totalCount = default !)\r\n        {\r\n            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));\r\n            Nodes = nodes;\r\n            PageInfo = pageInfo;\r\n            TotalCount = totalCount;\r\n        }\r\n\r\n        public global::System.String __typename { get; }\r\n        ///<summary>A flattened list of the nodes.</summary>\r\n        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Nodes { get; }\r\n        ///<summary>Information to aid in pagination.</summary>\r\n        public global::GraphQLDemo.Client.State.PageInfoData? PageInfo { get; }\r\n        public global::System.Int32? TotalCount { get; }\r\n    }\r\n\r\n    ///<summary>Information about pagination in a connection.</summary>\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class PageInfoData\r\n    {\r\n        public PageInfoData(global::System.String __typename, global::System.String? startCursor = default !, global::System.String? endCursor = default !, global::System.Boolean? hasNextPage = default !, global::System.Boolean? hasPreviousPage = default !)\r\n        {\r\n            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));\r\n            StartCursor = startCursor;\r\n            EndCursor = endCursor;\r\n            HasNextPage = hasNextPage;\r\n            HasPreviousPage = hasPreviousPage;\r\n        }\r\n\r\n        public global::System.String __typename { get; }\r\n        ///<summary>When paginating backwards, the cursor to continue.</summary>\r\n        public global::System.String? StartCursor { get; }\r\n        ///<summary>When paginating forwards, the cursor to continue.</summary>\r\n        public global::System.String? EndCursor { get; }\r\n        ///<summary>Indicates whether more edges exist following the set defined by the clients arguments.</summary>\r\n        public global::System.Boolean? HasNextPage { get; }\r\n        ///<summary>Indicates whether more edges exist prior the set defined by the clients arguments.</summary>\r\n        public global::System.Boolean? HasPreviousPage { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GraphQLDemoClientEntityIdFactory : global::StrawberryShake.IEntityIdSerializer\r\n    {\r\n        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()\r\n        {\r\n            Indented = false\r\n        };\r\n        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            global::System.String __typename = obj.GetProperty(\"__typename\").GetString()!;\r\n            return __typename switch\r\n            {\r\n                \"CourseResult\" => ParseCourseResultEntityId(obj, __typename),\r\n                \"CourseType\" => ParseCourseTypeEntityId(obj, __typename),\r\n                \"InstructorType\" => ParseInstructorTypeEntityId(obj, __typename),\r\n                \"StudentType\" => ParseStudentTypeEntityId(obj, __typename),\r\n                _ => throw new global::System.NotSupportedException()};\r\n        }\r\n\r\n        public global::System.String Format(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            return entityId.Name switch\r\n            {\r\n                \"CourseResult\" => FormatCourseResultEntityId(entityId),\r\n                \"CourseType\" => FormatCourseTypeEntityId(entityId),\r\n                \"InstructorType\" => FormatInstructorTypeEntityId(entityId),\r\n                \"StudentType\" => FormatStudentTypeEntityId(entityId),\r\n                _ => throw new global::System.NotSupportedException()};\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId ParseCourseResultEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)\r\n        {\r\n            return new global::StrawberryShake.EntityId(type, obj.GetProperty(\"id\").GetString()!);\r\n        }\r\n\r\n        private global::System.String FormatCourseResultEntityId(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            using var writer = new global::StrawberryShake.Internal.ArrayWriter();\r\n            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);\r\n            jsonWriter.WriteStartObject();\r\n            jsonWriter.WriteString(\"__typename\", entityId.Name);\r\n            jsonWriter.WriteString(\"id\", (global::System.String)entityId.Value);\r\n            jsonWriter.WriteEndObject();\r\n            jsonWriter.Flush();\r\n            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId ParseCourseTypeEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)\r\n        {\r\n            return new global::StrawberryShake.EntityId(type, obj.GetProperty(\"id\").GetString()!);\r\n        }\r\n\r\n        private global::System.String FormatCourseTypeEntityId(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            using var writer = new global::StrawberryShake.Internal.ArrayWriter();\r\n            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);\r\n            jsonWriter.WriteStartObject();\r\n            jsonWriter.WriteString(\"__typename\", entityId.Name);\r\n            jsonWriter.WriteString(\"id\", (global::System.String)entityId.Value);\r\n            jsonWriter.WriteEndObject();\r\n            jsonWriter.Flush();\r\n            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId ParseInstructorTypeEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)\r\n        {\r\n            return new global::StrawberryShake.EntityId(type, obj.GetProperty(\"id\").GetString()!);\r\n        }\r\n\r\n        private global::System.String FormatInstructorTypeEntityId(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            using var writer = new global::StrawberryShake.Internal.ArrayWriter();\r\n            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);\r\n            jsonWriter.WriteStartObject();\r\n            jsonWriter.WriteString(\"__typename\", entityId.Name);\r\n            jsonWriter.WriteString(\"id\", (global::System.String)entityId.Value);\r\n            jsonWriter.WriteEndObject();\r\n            jsonWriter.Flush();\r\n            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId ParseStudentTypeEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)\r\n        {\r\n            return new global::StrawberryShake.EntityId(type, obj.GetProperty(\"id\").GetString()!);\r\n        }\r\n\r\n        private global::System.String FormatStudentTypeEntityId(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            using var writer = new global::StrawberryShake.Internal.ArrayWriter();\r\n            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);\r\n            jsonWriter.WriteStartObject();\r\n            jsonWriter.WriteString(\"__typename\", entityId.Name);\r\n            jsonWriter.WriteString(\"id\", (global::System.String)entityId.Value);\r\n            jsonWriter.WriteEndObject();\r\n            jsonWriter.Flush();\r\n            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public partial class GraphQLDemoClientStoreAccessor : global::StrawberryShake.StoreAccessor\r\n    {\r\n        public GraphQLDemoClientStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories) : base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)\r\n        {\r\n        }\r\n    }\r\n}\r\n\r\nnamespace Microsoft.Extensions.DependencyInjection\r\n{\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"11.3.2.0\")]\r\n    public static partial class GraphQLDemoClientServiceCollectionExtensions\r\n    {\r\n        public static global::StrawberryShake.IClientBuilder<global::GraphQLDemo.Client.State.GraphQLDemoClientStoreAccessor> AddGraphQLDemoClient(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)\r\n        {\r\n            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>\r\n            {\r\n                ConfigureClientDefault(sp, serviceCollection, strategy);\r\n                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));\r\n            });\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::GraphQLDemo.Client.State.GraphQLDemoClientStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.CreateCourseMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.CourseCreatedSubscription>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.UpdateCourseMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GetCourseByIdQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.DeleteCourseMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.CourseUpdatedSubscription>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.SearchQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GetInstructionsQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GetCoursesQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GraphQLDemoClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.IGraphQLDemoClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            return new global::StrawberryShake.ClientBuilder<global::GraphQLDemo.Client.State.GraphQLDemoClientStoreAccessor>(\"GraphQLDemoClient\", services, serviceCollection);\r\n        }\r\n\r\n        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)\r\n        {\r\n            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.WebSockets.IWebSocketConnection>(services, sp =>\r\n            {\r\n                var sessionPool = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.WebSockets.ISessionPool>(parentServices);\r\n                return new global::StrawberryShake.Transport.WebSockets.WebSocketConnection(async ct => await sessionPool.CreateAsync(\"GraphQLDemoClient\", ct));\r\n            });\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>\r\n            {\r\n                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);\r\n                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient(\"GraphQLDemoClient\"));\r\n            });\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, global::GraphQLDemo.Client.CreateCourse_CreateCourse_CourseResult>, global::GraphQLDemo.Client.State.CreateCourse_CreateCourse_CourseResultFromCourseResultEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, global::GraphQLDemo.Client.CourseCreated_CourseCreated_CourseResult>, global::GraphQLDemo.Client.State.CourseCreated_CourseCreated_CourseResultFromCourseResultEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, global::GraphQLDemo.Client.UpdateCourse_UpdateCourse_CourseResult>, global::GraphQLDemo.Client.State.UpdateCourse_UpdateCourse_CourseResultFromCourseResultEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, global::GraphQLDemo.Client.GetCourseById_CourseById_CourseType>, global::GraphQLDemo.Client.State.GetCourseById_CourseById_CourseTypeFromCourseTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, global::GraphQLDemo.Client.GetCourseById_CourseById_Instructor_InstructorType>, global::GraphQLDemo.Client.State.GetCourseById_CourseById_Instructor_InstructorTypeFromInstructorTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.StudentTypeEntity, global::GraphQLDemo.Client.GetCourseById_CourseById_Students_StudentType>, global::GraphQLDemo.Client.State.GetCourseById_CourseById_Students_StudentTypeFromStudentTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseResultEntity, global::GraphQLDemo.Client.CourseUpdated_CourseUpdated_CourseResult>, global::GraphQLDemo.Client.State.CourseUpdated_CourseUpdated_CourseResultFromCourseResultEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, global::GraphQLDemo.Client.Search_Search_CourseType>, global::GraphQLDemo.Client.State.Search_Search_CourseTypeFromCourseTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, global::GraphQLDemo.Client.Search_Search_InstructorType>, global::GraphQLDemo.Client.State.Search_Search_InstructorTypeFromInstructorTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.CourseTypeEntity, global::GraphQLDemo.Client.GetCourses_Courses_Nodes_CourseType>, global::GraphQLDemo.Client.State.GetCourses_Courses_Nodes_CourseTypeFromCourseTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::GraphQLDemo.Client.State.InstructorTypeEntity, global::GraphQLDemo.Client.GetCourses_Courses_Nodes_Instructor_InstructorType>, global::GraphQLDemo.Client.State.GetCourses_Courses_Nodes_Instructor_InstructorTypeFromInstructorTypeEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.SubjectSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.SortEnumTypeSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UuidSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.CourseTypeInputInputValueFormatter>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.CourseTypeFilterInputInputValueFormatter>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.ComparableGuidOperationFilterInputInputValueFormatter>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.StringOperationFilterInputInputValueFormatter>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.SubjectOperationFilterInputInputValueFormatter>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::GraphQLDemo.Client.CourseTypeSortInputInputValueFormatter>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICreateCourseResult>, global::GraphQLDemo.Client.State.CreateCourseResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICreateCourseResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.ICreateCourseMutation>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICreateCourseResult>, global::GraphQLDemo.Client.State.CreateCourseBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.ICreateCourseResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICreateCourseResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICreateCourseResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.CreateCourseMutation>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.ICreateCourseMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.CreateCourseMutation>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseCreatedResult>, global::GraphQLDemo.Client.State.CourseCreatedResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseCreatedResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.ICourseCreatedSubscription>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseCreatedResult>, global::GraphQLDemo.Client.State.CourseCreatedBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.ICourseCreatedResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseCreatedResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.WebSockets.IWebSocketConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseCreatedResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.CourseCreatedSubscription>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.ICourseCreatedSubscription>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.CourseCreatedSubscription>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IUpdateCourseResult>, global::GraphQLDemo.Client.State.UpdateCourseResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IUpdateCourseResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.IUpdateCourseMutation>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IUpdateCourseResult>, global::GraphQLDemo.Client.State.UpdateCourseBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.IUpdateCourseResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IUpdateCourseResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IUpdateCourseResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.UpdateCourseMutation>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.IUpdateCourseMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.UpdateCourseMutation>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCourseByIdResult>, global::GraphQLDemo.Client.State.GetCourseByIdResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCourseByIdResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.IGetCourseByIdQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCourseByIdResult>, global::GraphQLDemo.Client.State.GetCourseByIdBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.IGetCourseByIdResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCourseByIdResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCourseByIdResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.GetCourseByIdQuery>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.IGetCourseByIdQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GetCourseByIdQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IDeleteCourseResult>, global::GraphQLDemo.Client.State.DeleteCourseResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IDeleteCourseResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.IDeleteCourseMutation>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IDeleteCourseResult>, global::GraphQLDemo.Client.State.DeleteCourseBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.IDeleteCourseResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IDeleteCourseResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IDeleteCourseResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.DeleteCourseMutation>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.IDeleteCourseMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.DeleteCourseMutation>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseUpdatedResult>, global::GraphQLDemo.Client.State.CourseUpdatedResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ICourseUpdatedResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.ICourseUpdatedSubscription>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseUpdatedResult>, global::GraphQLDemo.Client.State.CourseUpdatedBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.ICourseUpdatedResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseUpdatedResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.WebSockets.IWebSocketConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ICourseUpdatedResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.CourseUpdatedSubscription>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.ICourseUpdatedSubscription>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.CourseUpdatedSubscription>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ISearchResult>, global::GraphQLDemo.Client.State.SearchResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.ISearchResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.ISearchQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ISearchResult>, global::GraphQLDemo.Client.State.SearchBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.ISearchResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ISearchResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.ISearchResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.SearchQuery>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.ISearchQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.SearchQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetInstructionsResult>, global::GraphQLDemo.Client.State.GetInstructionsResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetInstructionsResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.IGetInstructionsQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetInstructionsResult>, global::GraphQLDemo.Client.State.GetInstructionsBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.IGetInstructionsResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetInstructionsResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetInstructionsResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.GetInstructionsQuery>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.IGetInstructionsQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GetInstructionsQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCoursesResult>, global::GraphQLDemo.Client.State.GetCoursesResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::GraphQLDemo.Client.IGetCoursesResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.IGetCoursesQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCoursesResult>, global::GraphQLDemo.Client.State.GetCoursesBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::GraphQLDemo.Client.IGetCoursesResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCoursesResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::GraphQLDemo.Client.IGetCoursesResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.GetCoursesQuery>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.IGetCoursesQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GetCoursesQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::GraphQLDemo.Client.State.GraphQLDemoClientEntityIdFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.GraphQLDemoClient>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::GraphQLDemo.Client.IGraphQLDemoClient>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::GraphQLDemo.Client.GraphQLDemoClient>(sp));\r\n            return services;\r\n        }\r\n\r\n        private class ClientServiceProvider : System.IServiceProvider, System.IDisposable\r\n        {\r\n            private readonly System.IServiceProvider _provider;\r\n            public ClientServiceProvider(System.IServiceProvider provider)\r\n            {\r\n                _provider = provider;\r\n            }\r\n\r\n            public object? GetService(System.Type serviceType)\r\n            {\r\n                return _provider.GetService(serviceType);\r\n            }\r\n\r\n            public void Dispose()\r\n            {\r\n                if (_provider is System.IDisposable d)\r\n                {\r\n                    d.Dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","Kind":0,"Hash":null,"Path":null}]